{"type": "root", "attrs": {"type": "homclass", "cppname": "HOM_NetworkMovableItem", "superclass": "hou.NetworkItem", "group": "nodes"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": [{"type": "supertitle", "text": "hou."}, "NetworkMovableItem"], "extent": [0, 27]}, {"type": "summary", "indent": 0, "text": ["The base class for all visible elements within a network, such as Nodes, Network Boxes, and Sticky Notes."], "extent": [120, 233]}, {"type": "para", "indent": 0, "text": ["Each movable item has a position, color, and other attributes that allow for\ncommon interactions in the network editor. All movable items will have a\nparent network (except the node represented by ", {"type": "code", "text": ["hou.node('/')"]}, "), and may be\ncontained by a ", {"scheme": "Hom", "value": "/hom/hou/NetworkBox", "type": "link", "text": "", "fallback_text": "hou.NetworkBox", "fullpath": "/hom/hou/NetworkBox"}, ". Not all movable items have a name, but\nall have a numeric session id, which is a unique number within a given\nHoudini session for a given subclass of ", {"type": "code", "text": ["NetworkMovableItem"]}, "."], "extent": [233, 669]}, {"level": 1, "id": "methods", "container": true, "type": "methods_section", "indent": 0, "role": "section", "extent": [669, 678], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Name and path"], "extent": [678, 699], "body": [{"type": "methods_item_group", "body": [{"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["name(self)"]}, "  \u2192 ", {"type": "code", "text": ["str"]}], "role": "item", "extent": [699, 725], "body": [{"type": "para", "indent": 4, "text": ["Return this node\u2019s name.  See also ", {"scheme": "Hom", "value": "/hom/hou/NetworkMovableItem#path", "type": "link", "text": "", "fallback_text": "hou.NetworkMovableItem.path", "fullpath": "/hom/hou/NetworkMovableItem#path", "fragment": "#path"}, "."], "extent": [846, 921]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::name", "replaces": "/commands/opname /expressions/opname /expressions/optypeinfo"}, "id": "name"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["setName(self, name, unique_name=False)"]}], "role": "item", "extent": [921, 965], "body": [{"type": "para", "indent": 4, "text": ["Set the name of this node.  Raises ", {"scheme": "Hom", "value": "/hom/hou/OperationFailed", "type": "link", "text": "", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed"}, " if the new\n    name contains characters other than letters, numbers, periods, dashes, or\n    underscores.  Raises ", {"scheme": "Hom", "value": "/hom/hou/OperationFailed", "type": "link", "text": "", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed"}, " if the node could not be\n    renamed (for example, another node already exists with the name, the node\n    is the root node or top-level manager (e.g. /obj), or the node is inside\n    a locked asset).  If the unique_name parameter is set to True, the\n    supplied name may be changed to ensure that it doesn\u2019t match the name of\n    any existing node."], "extent": [1064, 1621]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::setName", "replaces": "/commands/opname /expressions/opname"}, "id": "setName"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["digitsInName(self)"]}, "  \u2192 ", {"type": "code", "text": ["int"]}], "role": "item", "extent": [1621, 1654], "body": [{"type": "para", "indent": 4, "text": ["Return the value of the last set of digits inside the node\u2019s name, or\n    0 if there are no digits."], "extent": [1742, 1847]}, {"type": "para", "indent": 4, "text": ["For example, the result is ", {"type": "code", "text": ["102"]}, " for a node named ", {"type": "code", "text": ["geo102"]}, ", and ", {"type": "code", "text": ["34"]}, " for\n    a node named ", {"type": "code", "text": ["light12to34"]}, "."], "extent": [1847, 1957]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::digitsInName", "replaces": "/expressions/opdigits"}, "id": "digitsInName"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["path(self)"]}, "  \u2192 ", {"type": "code", "text": ["str"]}], "role": "item", "extent": [1957, 1982], "body": [{"type": "para", "indent": 4, "text": ["Return the full path (i.e. starting with ", {"type": "code", "text": ["/"]}, ") of this node in the network."], "extent": [2117, 2197]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::path", "replaces": "/expressions/opfullpath /expressions/opinputpath /expressions/opoutputpath"}, "id": "path"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["relativePathTo(self, base_node)"]}, "  \u2192 ", {"type": "code", "text": ["str"]}], "role": "item", "extent": [2197, 2243], "body": [{"type": "para", "indent": 4, "text": ["Return a relative path to another node object from this node."], "extent": [2339, 2406]}, {"lang": "pycon", "type": "pre", "indent": 4, "text": ["\n    >>> box1 = hou.node(\"/obj/box_object1/box1\")\n    >>> sphere1 = hou.node(\"/obj/sphere_object1/sphere1\")\n    >>> box1.relativePathTo(sphere1)\n    '../../sphere_object1/sphere1'\n    >>> hou.node(\"/obj\").relativePathTo(box1)\n    'box_object1/box1'\n    >>> box1.relativePathTo(box1)\n    '.'\n    "], "extent": [2406, 2724]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::relativePathTo", "replaces": "/expressions/oprelativepath"}, "id": "relativePathTo"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Hierarchy"], "extent": [2724, 2741], "body": [{"type": "methods_item_group", "body": [{"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["parent(self)"]}, "  \u2192 ", {"scheme": "Hom", "value": "/hom/hou/Node", "type": "link", "text": "", "fallback_text": "hou.Node", "fullpath": "/hom/hou/Node"}], "role": "item", "extent": [2741, 2778], "body": [{"type": "para", "indent": 4, "text": ["Return the node that contains this item."], "extent": [2823, 2869]}, {"type": "para", "indent": 4, "text": ["Note that this method returns None if the item is the root node (i.e. ", {"type": "code", "text": ["/"]}, ")."], "extent": [2869, 2950]}, {"lang": "pycon", "type": "pre", "indent": 4, "text": ["\n    >>> hou.node(\"/obj/box_object1\").parent()\n    <hou.Node at /obj>\n    >>> print hou.node(\"/\").parent()\n    None\n    "], "extent": [2950, 3093]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::parent"}, "id": "parent"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["parentNetworkBox(self)"]}, "  \u2192 ", {"scheme": "Hom", "value": "/hom/hou/NetworkBox", "type": "link", "text": "", "fallback_text": "hou.NetworkBox", "fullpath": "/hom/hou/NetworkBox"}, " or ", {"type": "code", "text": ["None"]}], "role": "item", "extent": [3093, 3156], "body": [{"type": "para", "indent": 4, "text": ["Returns the parent network box which contains this item, or None\n    if it is not inside a network box."], "extent": [3212, 3321]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::parentNetworkBox"}, "id": "parentNetworkBox"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Selection"], "extent": [3321, 3337], "body": [{"type": "methods_item_group", "body": [{"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["isSelected(self)"]}, "  \u2192 ", {"type": "code", "text": ["bool"]}], "role": "item", "extent": [3337, 3370], "body": [{"type": "para", "indent": 4, "text": ["Return whether this item is selected."], "extent": [3471, 3514]}, {"type": "para", "indent": 4, "text": ["See also ", {"scheme": "Hom", "value": "/hom/hou/selectedNodes", "type": "link", "text": "", "fallback_text": "hou.selectedNodes", "fullpath": "/hom/hou/selectedNodes"}, "."], "extent": [3514, 3553]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::isSelected", "replaces": "/commands/opget /expressions/opflag"}, "id": "isSelected"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["isPicked(self)"]}, "  \u2192 ", {"type": "code", "text": ["bool"]}], "role": "item", "extent": [3553, 3583], "body": [{"type": "para", "indent": 4, "text": ["Equivalent to calling ", {"scheme": "Hom", "value": "/hom/hou/NetworkMovableItem#isSelected", "type": "link", "text": "", "fallback_text": "hou.NetworkMovableItem.isSelected", "fullpath": "/hom/hou/NetworkMovableItem#isSelected", "fragment": "#isSelected"}, "."], "extent": [3682, 3750]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::isPicked", "replaces": "/commands/opget /expressions/opflag"}, "id": "isPicked"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["setSelected(self, on, clear_all_selected=False, show_asset_if_selected=False)"]}], "role": "item", "extent": [3750, 3833], "body": [{"type": "para", "indent": 4, "text": ["Select or deselect this item, optionally deselecting all other selected\n    items in this network. If ", {"type": "code", "text": ["show_asset_if_selected"]}, " is True, and this item\n    is a ", {"type": "code", "text": ["Node"]}, ", then the panes will show the top-level asset of the selected\n    item instead."], "extent": [3937, 4188]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::setSelected", "replaces": "/commands/opset /expressions/opselect"}, "id": "setSelected"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["setPicked(self, on)"]}], "role": "item", "extent": [4188, 4213], "body": [{"type": "para", "indent": 4, "text": ["Equivalent to calling ", {"scheme": "Hom", "value": "/hom/hou/NetworkMovableItem#setSelected", "type": "link", "text": "", "fallback_text": "hou.NetworkMovableItem.setSelected", "fullpath": "/hom/hou/NetworkMovableItem#setSelected", "fragment": "#setSelected"}, " with\n    default values for all optional parameters."], "extent": [4315, 4436]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::setPicked", "replaces": "/commands/opset /expressions/opselect"}, "id": "setPicked"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Metadata"], "extent": [4436, 4451], "body": [{"type": "methods_item_group", "body": [{"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["color(self)"]}, "  \u2192 ", {"scheme": "Hom", "value": "/hom/hou/Color", "type": "link", "text": "", "fallback_text": "hou.Color", "fullpath": "/hom/hou/Color"}], "role": "item", "extent": [4451, 4488], "body": [{"type": "para", "indent": 4, "text": ["Return the color of this item\u2019s tile in the network editor."], "extent": [4565, 4630]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::color", "replaces": "/commands/opcolor"}, "id": "color"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["setColor(self, color)"]}], "role": "item", "extent": [4630, 4657], "body": [{"type": "para", "indent": 4, "text": ["Sets the color of this item\u2019s tile in the network editor to the\n    given ", {"scheme": "Hom", "value": "/hom/hou/Color", "type": "link", "text": "", "fallback_text": "hou.Color", "fullpath": "/hom/hou/Color"}, "."], "extent": [4737, 4833]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::setColor", "replaces": "/commands/opcolor"}, "id": "setColor"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["sessionId(self)"]}], "role": "item", "extent": [4833, 4854], "body": [{"type": "para", "indent": 4, "text": ["Returns an integer value that uniquely identifies this item\n    in a given Houdini session. This id is only guaranteed to be unique\n    in a single Houdini process. It is useful as a quick and easy way to\n    save a restore a reference to an item. It is also only unique for\n    a specific item subclass. So there may be a ", {"type": "code", "text": ["Node"]}, " with the same\n    session id as a ", {"type": "code", "text": ["NetworkBox"]}, "."], "extent": [4936, 5319]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": "Hom", "value": "/hom/hou/nodeBySessionId", "type": "link", "text": "", "fallback_text": "hou.nodeBySessionId", "fullpath": "/hom/hou/nodeBySessionId"}, " to turn a session id back into a node,\n    or ", {"scheme": "Hom", "value": "/hom/hou/networkBoxBySessionId", "type": "link", "text": "", "fallback_text": "hou.networkBoxBySessionId", "fullpath": "/hom/hou/networkBoxBySessionId"}, " to turn a session id back into a\n    network box, or more generally, ", {"scheme": "Hom", "value": "/hom/hou/itemBySessionId", "type": "link", "text": "", "fallback_text": "hou.itemBySessionId", "fullpath": "/hom/hou/itemBySessionId"}, " to turn a\n    session id combined with an enum value indicating the item subclass\n    into an item of that type."], "extent": [5319, 5640]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::sessionId", "replaces": "/expressions/opid"}, "id": "sessionId"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Layout"], "extent": [5640, 5653], "body": [{"type": "methods_item_group", "body": [{"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["position(self)"]}, "  \u2192 ", {"scheme": "Hom", "value": "/hom/hou/Vector2", "type": "link", "text": "", "fallback_text": "hou.Vector2", "fullpath": "/hom/hou/Vector2"}], "role": "item", "extent": [5653, 5695], "body": [{"type": "para", "indent": 4, "text": ["Return the position of this item\u2019s tile in the network editor graph as\n    a ", {"type": "code", "text": ["Vector2"]}, ". See also ", {"type": "code", "text": ["move()"]}, " and ", {"type": "code", "text": ["setPosition()"]}, "."], "extent": [5776, 5908]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::position", "replaces": "/commands/oplocate"}, "id": "position"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["setPosition(self, vector2)"]}], "role": "item", "extent": [5908, 5940], "body": [{"type": "para", "indent": 4, "text": ["Sets the position of this item\u2019s tile in the network editor graph.\n    Raises ", {"scheme": "Hom", "value": "/hom/hou/InvalidInput", "type": "link", "text": "", "fallback_text": "hou.InvalidInput", "fullpath": "/hom/hou/InvalidInput"}, " if the item cannot have the given position."], "extent": [6024, 6174]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::setPosition", "replaces": "/commands/oplocate"}, "id": "setPosition"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["move(self, vector2)"]}], "role": "item", "extent": [6174, 6199], "body": [{"type": "para", "indent": 4, "text": ["Moves this item\u2019s tile in the network editor graph by the increments in\n    the given ", {"scheme": "Hom", "value": "/hom/hou/Vector2", "type": "link", "text": "", "fallback_text": "hou.Vector2", "fullpath": "/hom/hou/Vector2"}, "."], "extent": [6276, 6386]}, {"type": "para", "indent": 4, "text": ["To position a item absolutely, use ", {"type": "code", "text": ["setPosition()"]}, "."], "extent": [6386, 6443]}, {"type": "para", "indent": 4, "text": ["To get the item\u2019s current graph position, use ", {"type": "code", "text": ["position()"]}, "."], "extent": [6443, 6508]}, {"type": "para", "indent": 4, "text": ["Raises ", {"scheme": "Hom", "value": "/hom/hou/InvalidInput", "type": "link", "text": "", "fallback_text": "hou.InvalidInput", "fullpath": "/hom/hou/InvalidInput"}, " if the item cannot move to the position\n    specified."], "extent": [6508, 6598]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::move", "replaces": "/commands/oplocate"}, "id": "move"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["shiftPosition(self, vector2)"]}], "role": "item", "extent": [6598, 6632], "body": [{"type": "para", "indent": 4, "text": ["Equivalent to calling ", {"scheme": "Hom", "value": "/hom/hou/NetworkMovableItem#move", "type": "link", "text": "", "fallback_text": "hou.NetworkMovableItem.move", "fullpath": "/hom/hou/NetworkMovableItem#move", "fragment": "#move"}, "."], "extent": [6718, 6780]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::shiftPosition", "replaces": "/commands/oplocate"}, "id": "shiftPosition"}, {"ext": null, "type": "methods_item", "indent": 0, "text": [{"type": "code", "text": ["size(self)"]}, "  \u2192 ", {"scheme": "Hom", "value": "/hom/hou/Vector2", "type": "link", "text": "", "fallback_text": "hou.Vector2", "fullpath": "/hom/hou/Vector2"}], "role": "item", "extent": [6780, 6817], "body": [{"type": "para", "indent": 4, "text": ["Return the size of this item\u2019s tile in the network editor graph as a\n    ", {"type": "code", "text": ["Vector2"]}, "."], "extent": [6860, 6949]}], "container": true, "attrs": {"cppname": "HOM_NetworkMovableItem::size"}, "id": "size"}], "container": true, "role": "item_group"}]}], "text": "Methods"}], "title": [{"type": "supertitle", "text": "hou."}, "NetworkMovableItem"], "summary": ["The base class for all visible elements within a network, such as Nodes, Network Boxes, and Sticky Notes."]}