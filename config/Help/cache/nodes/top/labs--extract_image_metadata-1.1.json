{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "labs::extract_image_metadata::1.1", "icon": "TOP/labs::extract_image_metadata::1.1", "since": "19.0", "version": "1.1", "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs Extract Image Metadata"], "extent": [142, 174]}, {"type": "summary", "indent": 0, "text": ["Extracts image metadata, such as the resolution, bit depth, color model, etc."], "extent": [174, 260]}, {"type": "para", "indent": 0, "text": ["This node extracts image metadata from input images that have file/image tags attached to them. It then stores those metadata as workitem attributes."], "extent": [260, 411]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [411, 416], "body": [{"type": "para", "indent": 4, "text": ["You can use a ", {"scheme": "Node", "value": "/nodes//top/filepattern", "type": "link", "text": ["File Pattern"], "fullpath": "/nodes//top/filepattern.html"}, " node upstream from this node to generate image workitems."], "extent": [416, 530]}], "container": true}], "container": true, "role": "item_group"}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [530, 536], "body": [{"type": "para", "indent": 4, "text": ["This node calls the utility tool called ", {"type": "em", "text": ["iinfo"]}, " which ships with Houdini. It does so with the Python ", {"type": "em", "text": ["subprocess"]}, " module."], "extent": [536, 664]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [664, 676], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Script"], "extent": [676, 694], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Evaluate Script During"], "extent": [694, 723], "body": [{"type": "para", "indent": 8, "text": ["Determines when the script code stored on this node is evaluated."], "extent": [746, 821]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Cook (Out-of-Process)"]}, ": A scheduler runs the script out-of-process during the cook stage."], "extent": [821, 923]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Cook (In-Process)"]}, ": Runs the script during the cook stage in the same process as the Houdini session."], "extent": [923, 1037]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Generate"]}, ": Runs the script when the work item is generating."], "extent": [1037, 1110]}], "container": true, "attrs": {"id": "inprocess"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Copy Inputs to Outputs"], "extent": [1110, 1138], "body": [{"type": "para", "indent": 8, "text": ["Determines whether or not work items in this node should copy input files to their output file list."], "extent": [1163, 1273]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Never"]}, ": Never copy inputs files the output file list."], "extent": [1273, 1339]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Always"]}, ": Always copy inputs files the output file list."], "extent": [1339, 1407]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["If Script Doesn\u2019t Add Outputs"]}, ": By default, input files are only copied if the Python Script does not add any new output files on its own."], "extent": [1407, 1570]}], "container": true, "attrs": {"id": "copyoutputs"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Metadata"], "extent": [1570, 1589], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Store Resolution as Integer Attributes"], "extent": [1589, 1634], "body": [{"type": "para", "indent": 8, "text": ["Splits the original string containing the resolution into two separate integer attributes. (", {"type": "q", "text": ["10 x 5"]}, "  \u2192 10, 5)"], "extent": [1663, 1791]}], "container": true, "attrs": {"id": "resolutionasint"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Width Attribute"], "extent": [1791, 1812], "body": [{"type": "para", "indent": 8, "text": ["Name of the integer attribute that stores the width of the image."], "extent": [1837, 1920]}], "container": true, "attrs": {"id": "widthattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Height Attribute"], "extent": [1920, 1942], "body": [{"type": "para", "indent": 8, "text": ["Name of the integer attribute that stores the height of the image."], "extent": [1968, 2044]}], "container": true, "attrs": {"id": "heightattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Store Channel Depth as Integer Attributes"], "extent": [2044, 2091], "body": [{"type": "para", "indent": 8, "text": ["Splits the original string containing the channel depth into two separate integer attributes. (", {"type": "q", "text": ["8 x 4 (32 bpp)"]}, "  \u2192 8, 4)"], "extent": [2118, 2256]}], "container": true, "attrs": {"id": "channelsasint"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Bit Depth Attribute"], "extent": [2256, 2281], "body": [{"type": "para", "indent": 8, "text": ["Name of the integer attribute that stores the per-channel bit depth of the image."], "extent": [2306, 2405]}], "container": true, "attrs": {"id": "depthattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Channel Attribute"], "extent": [2405, 2428], "body": [{"type": "para", "indent": 8, "text": ["Name of the integer attribute that stores the number of channels of the image."], "extent": [2455, 2543]}], "container": true, "attrs": {"id": "channelattrib"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["Labs Extract Image Metadata"], "summary": ["Extracts image metadata, such as the resolution, bit depth, color model, etc."]}