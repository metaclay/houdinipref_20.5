{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "attribnoise::2.0", "icon": "SOP/attribnoise", "version": "2.0", "since": "18.5", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Attribute Noise"], "extent": [0, 20]}, {"type": "summary", "indent": 0, "text": ["Adds or generates noise in geometry attributes."], "extent": [139, 195]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [195, 210], "body": [{"type": "para", "indent": 0, "text": ["The Attribute Noise SOP provides a simple interface for quickly adding coherent noise\nto ", {"type": "code", "text": ["float"]}, " and ", {"type": "code", "text": ["vector"]}, " attributes, without needing to create VOP networks or write VEX code. All of the models provided by the ", {"scheme": "Node", "value": "/nodes/vop/unifiednoise", "type": "link", "text": ["Unified Noise VOP"], "fullpath": "/nodes/vop/unifiednoise.html"}, " can be\nused with this node. "], "extent": [210, 497]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [497, 502], "body": [{"type": "para", "indent": 4, "text": ["While this node has a simple and straightforward interface, the following nodes might allow for a finer control over modifying common attributes such as: ", {"type": "code", "text": ["pscale"]}, ", ", {"type": "code", "text": ["life"]}, ", ", {"type": "code", "text": ["variant"]}, ", ", {"type": "code", "text": ["v"]}, ", and ", {"type": "code", "text": ["N"]}, "."], "extent": [502, 706]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustfloat", "type": "link", "text": ["Attribute Adjust Float"], "fullpath": "/nodes/sop/attribadjustfloat.html"}], "extent": [706, 764]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustinteger", "type": "link", "text": ["Attribute Adjust Integer"], "fullpath": "/nodes/sop/attribadjustinteger.html"}], "extent": [764, 826]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustvector", "type": "link", "text": ["Attribute Adjust Vector"], "fullpath": "/nodes/sop/attribadjustvector.html"}], "extent": [826, 888]}], "container": true}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips and notes"], "extent": [888, 909], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["If an attribute exists, you can overwrite or combine the noise with the current values according to the ", {"type": "ui", "text": ["Operation"]}, " parameter. If an attribute doesn\u2019t exist, this node will create it."], "extent": [909, 1100]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1100, 1112], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" General "], "extent": [1112, 1129]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [1129, 1137], "body": [{"type": "para", "indent": 4, "text": ["The subset of the input geometry to apply the modifications to. Leave this blank to affect all elements.  The type of the group is controlled by the ", {"type": "ui", "text": ["Attribute Class"]}, " parameter."], "extent": [1153, 1338]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend"], "extent": [1338, 1345], "body": [{"type": "para", "indent": 4, "text": ["Blends between the incoming attribute and the output attribute value. A blend of ", {"type": "code", "text": ["0"]}, " means that no adjustment takes place: the incoming attribute value is the output value. Likewise, a value of ", {"type": "code", "text": ["1"]}, " will output the adjusted value, ignoring the initial value. Blending can be done either by uniform value (", {"type": "ui", "text": ["Constant"]}, ") or by value of the ", {"type": "ui", "text": ["Blend Attribute"]}, " (when the menu on the right of this parameter is set to ", {"type": "ui", "text": ["Use Attribute"]}, ")."], "extent": [1366, 1804]}], "container": true, "attrs": {"id": "blendweight"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend Attribute"], "extent": [1804, 1821], "body": [{"type": "para", "indent": 4, "text": ["A float attribute between the range ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " to use as blend value. This attribute must be present on the appropriate elements (as set by ", {"type": "ui", "text": ["Attribute Class"]}, "). A blend value of ", {"type": "code", "text": ["0"]}, " means that no adjustment takes place: the incoming attribute value is the output value. Likewise, a value of ", {"type": "code", "text": ["1"]}, " will output the adjusted value, ignoring the initial value."], "extent": [1842, 2203]}], "container": true, "attrs": {"id": "blendattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Type"], "extent": [2203, 2219], "body": [{"type": "para", "indent": 4, "text": ["Choose whether the attributes are float attributes or vector attributes. The node will switch to generate 1D or 3D noise according to this choice."], "extent": [2240, 2392]}], "container": true, "attrs": {"id": "attribtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Names"], "extent": [2392, 2409], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute to generate noise into. The class of attribute (such as point, face, or vertex) is controlled by the ", {"type": "ui", "text": ["Attribute Class"]}, " parameter. If the attribute does not exist, this node will create it. You can specify a space-separated list of names to add noise to multiple attributes at once."], "extent": [2427, 2742]}], "container": true, "attrs": {"id": "attribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Component Scope"], "extent": [2742, 2759], "body": [{"type": "para", "indent": 4, "text": ["When the attributes are vector attributes, specifies which vector components will be changed by this node. This filter applies as the last step on the adjustment value generation and it is useful to limit the dimension of the noise."], "extent": [2784, 3022]}], "container": true, "attrs": {"id": "componentscope"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Class"], "extent": [3022, 3039], "body": [{"type": "para", "indent": 4, "text": ["The level at which to look for/create the listed attributes: detail (whole geometry), primitives (faces), points, or vertices."], "extent": [3059, 3194]}], "container": true, "attrs": {"id": "class"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Along Vector"], "extent": [3194, 3214], "body": [{"type": "para", "indent": 4, "text": ["When the attributes are vector attributes, and the checkbox is on, the direction of the noise will be controlled by the ", {"type": "ui", "text": ["Vector Attribute"]}, " parameter and the noise will change the length of this vector. This is useful when you need to displace geometry along it\u2019s normal direction. "], "extent": [3237, 3526]}], "container": true, "attrs": {"id": "displace"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Vector Attribute"], "extent": [3526, 3544], "body": [{"type": "para", "indent": 4, "text": ["The attribute to use to specify the direction of the generated noise when ", {"type": "ui", "text": ["Noise Along Vector"]}, " is enabled. By default it will displace the geometry along it\u2019s normal vector. "], "extent": [3569, 3751]}], "container": true, "attrs": {"id": "displaceattrib"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Noise Range "], "extent": [3751, 3771]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Range Values"], "extent": [3771, 3786], "body": [{"type": "para", "indent": 4, "text": ["How to compute the minimum and maximum noise values. This menu lets you quickly set up common ranges (from zero to N, or from -N to N)."], "extent": [3807, 3948]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Positive"], "extent": [3948, 3962], "body": [{"type": "para", "indent": 8, "text": ["From 0 to the ", {"type": "ui", "text": ["Amplitude"]}, " value."], "extent": [3962, 4006]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Zero Centered"], "extent": [4006, 4025], "body": [{"type": "para", "indent": 8, "text": ["From negative ", {"type": "ui", "text": ["Amplitude"]}, " to positive ", {"type": "ui", "text": ["Amplitude"]}, "."], "extent": [4025, 4089]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Min/Max"], "extent": [4089, 4103], "body": [{"type": "para", "indent": 8, "text": ["Explicitly set ", {"type": "ui", "text": ["Min Value"]}, " and ", {"type": "ui", "text": ["Max Value"]}, "."], "extent": [4103, 4160]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Min Value "], "role": "th", "extent": [4160, 4181], "container": true}, {"type": "cell", "indent": 12, "text": ["Max Value "], "role": "th", "extent": [4181, 4207], "container": true}, {"type": "cell", "indent": 16, "text": ["Custom Range "], "role": "th", "extent": [4207, 4240]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["0 "], "role": "td", "extent": [4240, 4264], "container": true}, {"type": "cell", "indent": 12, "text": ["1 "], "role": "td", "extent": [4264, 4280], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["0 to 1"], "extent": [4280, 4303]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["5 "], "role": "td", "extent": [4303, 4327], "container": true}, {"type": "cell", "indent": 12, "text": ["10 "], "role": "td", "extent": [4327, 4344], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["5 to 10"], "extent": [4344, 4368]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["-5 "], "role": "td", "extent": [4368, 4393], "container": true}, {"type": "cell", "indent": 12, "text": ["7 "], "role": "td", "extent": [4393, 4409], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["-5 to 7"], "extent": [4409, 4434]}]}], "divider": false}]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Negative"], "extent": [4434, 4448], "body": [{"type": "para", "indent": 8, "text": ["From negative ", {"type": "ui", "text": ["Amplitude"]}, " to 0 value."], "extent": [4448, 4497]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Min + Range Length"], "extent": [4497, 4521], "body": [{"type": "para", "indent": 8, "text": ["The range contains all values between ", {"type": "ui", "text": ["Min Value"]}, " and ", {"type": "ui", "text": ["Min Value + Range Length"]}, ". For instance, if ", {"type": "ui", "text": ["Min Value"]}, " is ", {"type": "code", "text": ["2"]}, " and ", {"type": "ui", "text": ["Range Length"]}, " is ", {"type": "code", "text": ["5"]}, ", the minimum and maximum limits of the range will be ", {"type": "code", "text": ["2"]}, " and ", {"type": "code", "text": ["7"]}, ", respectively."], "extent": [4521, 4762]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Min Value "], "role": "th", "extent": [4762, 4783], "container": true}, {"type": "cell", "indent": 12, "text": ["Range Length "], "role": "th", "extent": [4783, 4812], "container": true}, {"type": "cell", "indent": 16, "text": ["Custom Range "], "role": "th", "extent": [4812, 4845]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["0 "], "role": "td", "extent": [4845, 4869], "container": true}, {"type": "cell", "indent": 12, "text": ["1 "], "role": "td", "extent": [4869, 4885], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["0 to 1"], "extent": [4885, 4908]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["5 "], "role": "td", "extent": [4908, 4932], "container": true}, {"type": "cell", "indent": 12, "text": ["10 "], "role": "td", "extent": [4932, 4949], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["5 to 15"], "extent": [4949, 4973]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["-5 "], "role": "td", "extent": [4973, 4998], "container": true}, {"type": "cell", "indent": 12, "text": ["7 "], "role": "td", "extent": [4998, 5014], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["-5 to 2"], "extent": [5014, 5039]}]}], "divider": false}]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Middle \u00b1 Range Length"], "extent": [5039, 5066], "body": [{"type": "para", "indent": 8, "text": ["The range contains all values between ", {"type": "ui", "text": ["Middle Value - Range Length"]}, " and ", {"type": "ui", "text": ["Middle Value + Range Length"]}, ". For instance, if ", {"type": "ui", "text": ["Middle Value"]}, " is ", {"type": "code", "text": ["8"]}, " and ", {"type": "ui", "text": ["Range Length"]}, " is ", {"type": "code", "text": ["4"]}, ", the minimum and maximum limits of the range will be ", {"type": "code", "text": ["4"]}, " and ", {"type": "code", "text": ["12"]}, ", respectively."], "extent": [5066, 5340]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Middle Value "], "role": "th", "extent": [5340, 5364], "container": true}, {"type": "cell", "indent": 12, "text": ["Range Length "], "role": "th", "extent": [5364, 5393], "container": true}, {"type": "cell", "indent": 16, "text": ["Custom Range "], "role": "th", "extent": [5393, 5426]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["0 "], "role": "td", "extent": [5426, 5450], "container": true}, {"type": "cell", "indent": 12, "text": ["1 "], "role": "td", "extent": [5450, 5466], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["-1 to 1"], "extent": [5466, 5490]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["5 "], "role": "td", "extent": [5490, 5514], "container": true}, {"type": "cell", "indent": 12, "text": ["5 "], "role": "td", "extent": [5514, 5530], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["0 to 10"], "extent": [5530, 5554]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["-5 "], "role": "td", "extent": [5554, 5579], "container": true}, {"type": "cell", "indent": 12, "text": ["7 "], "role": "td", "extent": [5579, 5595], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["-12 to 2"], "extent": [5595, 5621]}]}], "divider": false}]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [5621, 5635], "body": [{"type": "para", "indent": 12, "text": ["Behavior in this mode is different from ", {"type": "ui", "text": ["Middle \u00b1 Range Length"]}, " on\n            the attribute adjust nodes, where the resultant interval spans from\n            ", {"type": "ui", "text": ["Middle Value - Range Length / 2"]}, " to\n            ", {"type": "ui", "text": ["Middle Value + Range Length / 2"]}, "."], "extent": [5635, 5897]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "attrs": {"id": "noiserange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Operation"], "extent": [5897, 5908], "body": [{"type": "para", "indent": 4, "text": ["How to combine the generated noise with an existing attribute value. If the target attribute does not exist on the input geometry, this menu is ignored."], "extent": [5928, 6086]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Set Initial"], "extent": [6086, 6103], "body": [{"type": "para", "indent": 8, "text": ["If the attribute doesn\u2019t exist, set its value. If the attribute does already exist, don\u2019t modify it."], "extent": [6103, 6213]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Always"], "extent": [6213, 6229], "body": [{"type": "para", "indent": 8, "text": ["Overwrite any existing value."], "extent": [6229, 6268]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add"], "extent": [6268, 6277], "body": [{"type": "para", "indent": 8, "text": ["Add the generated noise value to the existing value."], "extent": [6277, 6339]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Subtract"], "extent": [6339, 6353], "body": [{"type": "para", "indent": 8, "text": ["Subtract the generated noise value from the existing value."], "extent": [6353, 6422]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Multiply"], "extent": [6422, 6436], "body": [{"type": "para", "indent": 8, "text": ["Multiply the generated noise value by the existing value."], "extent": [6436, 6503]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum"], "extent": [6503, 6516], "body": [{"type": "para", "indent": 8, "text": ["Use the lower of the generated noise value and the existing value."], "extent": [6516, 6600]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maximum"], "extent": [6600, 6613], "body": [{"type": "para", "indent": 8, "text": ["Use the higher of the generated noise value and the existing value."], "extent": [6613, 6694]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "operation"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Amplitude"], "extent": [6694, 6705], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Positive Values"]}, ", the generated noise is from 0 to this value. When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Negative Values"]}, ", the generated noise is from the negative of this value to 0 value. When ", {"type": "ui", "text": ["Range"]}, " is ", {"type": "ui", "text": ["Zero Centered Values"]}, ", the generated noise is from negative this value to positive this value."], "extent": [6747, 7072]}, {"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate amplitudes along each axis."], "extent": [7072, 7234]}], "container": true, "attrs": {"id": "amplitude", "also": "amplitudev"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Amplitude Scale"], "extent": [7234, 7251], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, " and you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you scale the ", {"type": "ui", "text": ["Amplitude"]}, " separately across each axis."], "extent": [7277, 7470]}], "container": true, "attrs": {"id": "amplitudescalev"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Value"], "extent": [7470, 7481], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Min/Max"]}, ", the lower limit of the range."], "extent": [7505, 7578]}, {"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate minimums along each axis."], "extent": [7578, 7737]}], "container": true, "attrs": {"id": "rangeminv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Value Scale"], "extent": [7737, 7754], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Min/Max"]}, ", and you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you scale the ", {"type": "ui", "text": ["Min Value"]}, " separately across each axis."], "extent": [7783, 8010]}], "container": true, "attrs": {"id": "rangeminscalev"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Value"], "extent": [8010, 8021], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Min/Max"]}, ", the higher limit of the range."], "extent": [8050, 8124]}, {"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate minimums along each axis."], "extent": [8124, 8279]}], "container": true, "attrs": {"id": "rangemaxv     "}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Value Scale"], "extent": [8279, 8296], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Min/Max"]}, ", and you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you scale the ", {"type": "ui", "text": ["Max Value"]}, " separately across each axis."], "extent": [8325, 8552]}], "container": true, "attrs": {"id": "rangemaxscalev"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Middle Value"], "extent": [8552, 8566], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Middle \u00b1 Range Length"]}, ", this value lies in the center of the custom range. "], "extent": [8585, 8694]}, {"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate middle values along each axis."], "extent": [8694, 8858]}], "container": true, "attrs": {"id": "midvaluev"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Middle Value Scale"], "extent": [8858, 8878], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Middle \u00b1 Range Length"]}, ", and you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you scale the ", {"type": "ui", "text": ["Middle Value"]}, " separately across each axis."], "extent": [8903, 9147]}], "container": true, "attrs": {"id": "midvaluescalev"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Range Length"], "extent": [9147, 9161], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Min + Range Length"]}, " or ", {"type": "ui", "text": ["Middle \u00b1 Range Length"]}, ", sets the length of the custom range."], "extent": [9183, 9303]}, {"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate the range along each axis."], "extent": [9303, 9459]}], "container": true, "attrs": {"id": "rangevaluev"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Range Length Scale"], "extent": [9459, 9479], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", ", {"type": "ui", "text": ["Range Values"]}, " is ", {"type": "ui", "text": ["Min + Range Length"]}, " or ", {"type": "ui", "text": ["Middle \u00b1 Range Length"]}, ", and you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you scale the ", {"type": "ui", "text": ["Range Length"]}, " separately across each axis."], "extent": [9506, 9776]}], "container": true, "attrs": {"id": "rangevaluescalev"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Raw Value"], "extent": [9776, 9794], "body": [{"type": "para", "indent": 4, "text": ["When this is on, the distribution of values is non-uniform, being more likely to fall near the center of the range than the edges. When this is off, values have a more uniform distribution across the range."], "extent": [9814, 10026]}, {"type": "para", "indent": 4, "text": ["This example shows noise where the ", {"type": "ui", "text": ["Element Size"]}, " is animated. The left side has this parameter on, the right side has this parameter off."], "extent": [10026, 10172]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [10172, 10184], "body": [], "container": true, "attrs": {"src": "/videos/sop/fitted_values.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "outputraw"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Remap Ramp"], "extent": [10229, 10248], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to shape the output of the noise with a ramp."], "extent": [10270, 10338]}], "container": true, "attrs": {"id": "enableremap"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remap Ramp"], "extent": [10338, 10350], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable Remap Ramp"]}, " is on, this ramp lets you control the output of the noise function. The horizontal axis represents the range (minimum on the left, maximum on the right). The vertical axis represents the number to output when the noise function generates that point within the range."], "extent": [10370, 10669]}, {"type": "para", "indent": 4, "text": ["The default ramp (diagonal from bottom-left to top-right) outputs each number ", {"type": "q", "text": ["as itself"]}, "."], "extent": [10669, 10765]}], "container": true, "attrs": {"id": "remapramp"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Value Correction "], "extent": [10765, 10790], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Bias"], "extent": [6823, 6830], "body": [{"type": "para", "indent": 4, "text": ["This value controls how much the medium grey (noise values around ", {"type": "code", "text": ["0.5"]}, ") is pulled towards zero (if ", {"type": "ui", "text": ["Bias"]}, " is less than ", {"type": "code", "text": ["1"]}, ")\n    or pulled towards one (if ", {"type": "ui", "text": ["Bias"]}, " is greater than ", {"type": "code", "text": ["1"]}, "). A value of ", {"type": "code", "text": ["0.5"]}, " leaves the noise values unaffected."], "extent": [6844, 7094]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_bias.png", "type": "img", "text": ""}], "extent": [7094, 7145]}], "container": true, "attrs": {"id": "bias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gain"], "extent": [7145, 7151], "body": [{"type": "para", "indent": 4, "text": ["Controls how much the medium greys (noise values around ", {"type": "code", "text": ["0.5"]}, ") are pulled together, while values around ", {"type": "code", "text": ["0"]}, " and ", {"type": "code", "text": ["1"]}, " are pulled apart. The value of ", {"type": "code", "text": ["0.5"]}, " leaves the noise values unaffected."], "extent": [7165, 7363]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_gain.png", "type": "img", "text": ""}], "extent": [7363, 7414]}], "container": true, "attrs": {"id": "gain"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gamma"], "extent": [7414, 7421], "body": [{"type": "para", "indent": 4, "text": ["Controls the overall gamma of the generated noise. Values less than ", {"type": "code", "text": ["1"]}, " will darken the noise, increasing the range of values in originally bright areas.\n    Conversely, values greater than ", {"type": "code", "text": ["1"]}, " will stretch out the range of values for originally dark areas, which will increase the overall brightness of the noise."], "extent": [7436, 7756]}], "container": true, "attrs": {"id": "gamma"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Contrast"], "extent": [7756, 7766], "body": [{"type": "para", "indent": 4, "text": ["This value expands or shrinks the overall range of tonal values. Particularly, each noise value is pushed towards (if ", {"type": "ui", "text": ["Contrast"]}, " is less than ", {"type": "code", "text": ["1"]}, ") or away from (if ", {"type": "ui", "text": ["Contrast"]}, " is greater than ", {"type": "code", "text": ["1"]}, ") medium grey (noise values at ", {"type": "code", "text": ["0.5"]}, ")."], "extent": [7784, 8027]}], "container": true, "attrs": {"id": "contrast"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 2, "type": "sep", "indent": 0, "text": [" Noise Pattern "], "extent": [10972, 10992]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Noise Type"], "extent": [10992, 11005], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."], "extent": [3119, 3223]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fast"], "extent": [3223, 3233], "body": [{"type": "para", "indent": 8, "text": ["The default. A faster and more interesting variant of Perlin noise."], "extent": [3233, 3310]}, {"type": "para", "indent": 8, "text": ["Frequency is scaled by 1.25."], "extent": [3310, 3352]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_simplex.jpg", "type": "img", "text": ""}], "extent": [3352, 3406]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sparse Convolution"], "extent": [3406, 3430], "body": [{"type": "para", "indent": 8, "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."], "extent": [3430, 3532]}, {"type": "para", "indent": 8, "text": ["Frequency is scaled by 1.25."], "extent": [3532, 3574]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sparse.jpg", "type": "img", "text": ""}], "extent": [3574, 3627]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alligator"], "extent": [3627, 3642], "body": [{"type": "para", "indent": 8, "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."], "extent": [3642, 3729]}, {"type": "para", "indent": 8, "text": ["Frequency is scaled by 1.64."], "extent": [3729, 3771]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_alligator.jpg", "type": "img", "text": ""}], "extent": [3771, 3831]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin"], "extent": [3831, 3843], "body": [{"type": "para", "indent": 8, "text": ["A noise where the visual details are the same size. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Perlin_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [3843, 3944]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_perlin.jpg", "type": "img", "text": ""}, "\n        ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_periodic_perlin.jpg", "type": "img", "text": ""}], "extent": [3944, 4058]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Flow"], "extent": [4058, 4075], "body": [{"type": "para", "indent": 8, "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"type": "ui", "text": ["Flow rotation"]}, " parameter below to control the rotation."], "extent": [4075, 4291]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4291, 4315], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_flow.mp4"}}, {"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4362, 4378], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_periodic_flow.mp4"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex"], "extent": [4438, 4451], "body": [{"type": "para", "indent": 8, "text": ["A noise similar to Perlin but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [4451, 4618]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F1"], "extent": [4618, 4642], "body": [{"type": "para", "indent": 8, "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Worley_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [4642, 4799]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f1.jpg", "type": "img", "text": ""}], "extent": [4799, 4859]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F2-F1"], "extent": [4859, 4886], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley noise that produces blunted and cornered features."], "extent": [4886, 4970]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f2.jpg", "type": "img", "text": ""}], "extent": [4970, 5030]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F1"], "extent": [5030, 5057], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5057, 5185]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F2-F1"], "extent": [5185, 5215], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5215, 5346]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F1"], "extent": [5346, 5373], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5373, 5501]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F2-F1"], "extent": [5501, 5531], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5531, 5658]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Cloud"], "extent": [11068, 11086], "body": [{"type": "para", "indent": 8, "text": ["Generates perlin noise based cloud pattern influenced by the ", {"type": "ui", "text": ["Distortion"]}, " parameter."], "extent": [11086, 11190]}, {"type": "para", "indent": 8, "text": ["Perlin noise with ", {"type": "ui", "text": ["Distortion"]}, " set to -1 (left) and +1 (right):"], "extent": [11190, 11264]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 8, "role": "item", "extent": [11264, 11289], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_perlin_posd.png", "image2": "/images/nodes/vop/cloudnoise_perlin_negd.png"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex Cloud"], "extent": [11422, 11441], "body": [{"type": "para", "indent": 8, "text": ["Generates simplex noise based cloud pattern influenced by the ", {"type": "ui", "text": ["Distortion"]}, " parameter. Simplex noise similar to Perlin, but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [11441, 11703]}, {"type": "para", "indent": 8, "text": ["Simplex noise with ", {"type": "ui", "text": ["Distortion"]}, " set to -1 (left) and +1 (right):"], "extent": [11703, 11778]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 8, "role": "item", "extent": [11778, 11803], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_simplex_posd.png", "image2": "/images/nodes/vop/cloudnoise_simplex_negd.png"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fast Simplex Cloud"], "extent": [11938, 11962], "body": [{"type": "para", "indent": 8, "text": ["Generates fast simplex noise based cloud pattern influenced by the ", {"type": "ui", "text": ["Distortion"]}, " parameter. This simplex noise function uses a different lattice structure and a cheaper accumulation method."], "extent": [11962, 12170]}, {"type": "para", "indent": 8, "text": ["Simplex noise with ", {"type": "ui", "text": ["Distortion"]}, " set to -1 (left) and +1 (right):"], "extent": [12170, 12245]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 8, "role": "item", "extent": [12245, 12270], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_fast_simplex_posd.png", "image2": "/images/nodes/vop/cloudnoise_fast_simplex_negd.png"}}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "attrs": {"id": "basis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Location Attribute"], "extent": [12418, 12438], "body": [{"type": "para", "indent": 4, "text": ["The node generates values for each element by sampling a noise field at the location specified by this vector attribute on the incoming geometry. If this is ", {"type": "code", "text": ["P"]}, " (point position, the default), the points of the geometry will appear to swim through the noise. If you want the noise to ", {"type": "q", "text": ["stick"]}, " to the points, you can copy the initial point positions into a ", {"type": "code", "text": ["rest"]}, " attribute and use that attribute here instead."], "extent": [12463, 12876]}], "container": true, "attrs": {"id": "locationattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size"], "extent": [12876, 12890], "body": [{"type": "para", "indent": 4, "text": ["Uniform scale of elements in the noise."], "extent": [12912, 12957]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate scales along each axis."], "extent": [12957, 13071]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [13071, 13083], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "elementsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Scale"], "extent": [13132, 13147], "body": [{"type": "para", "indent": 4, "text": ["When you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you scale the ", {"type": "ui", "text": ["Element Size"]}, " separately across each axis."], "extent": [13174, 13333]}], "container": true, "attrs": {"id": "elementscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [13333, 13341], "body": [{"type": "para", "indent": 4, "text": ["Offset within the evaluated noise field (added to each axis). If you have the general noise effect you want, but want to get a different set of values for a different look, try changing the offset."], "extent": [13358, 13561]}, {"type": "para", "indent": 4, "text": ["You can animate the noise using an expression such as ", {"type": "code", "text": ["$T * 0.25"]}, " here. This is faster to compute than ", {"type": "ui", "text": ["Animate Noise"]}, ", but gives the visual effect of ", {"type": "q", "text": ["panning"]}, " across the noise field, which may or may not be acceptable."], "extent": [13561, 13789]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate additional offsets along each axis."], "extent": [13789, 13919]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [13919, 13931], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "offset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [13979, 13987], "body": [{"type": "para", "indent": 4, "text": ["When you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you add the a separate offset along each axis."], "extent": [14009, 14155]}], "container": true, "attrs": {"id": "offsetv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use VEXpression"], "extent": [14155, 14172], "body": [{"type": "para", "indent": 4, "text": ["Turn this checkbox on to use a VEXpression to override parameters based on arbitrary attribute values."], "extent": [14201, 14309]}], "container": true, "attrs": {"id": "usenoiseexpression"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["VEX Expression"], "extent": [14309, 14325], "body": [{"type": "para", "indent": 4, "text": ["A VEX expression that can ", {"scheme": null, "value": "/vex/snippets#parameters", "type": "link", "text": ["override noise parameters"], "fullpath": "/vex/snippets.html#parameters", "fragment": "#parameters"}, " based on arbitrary attributes on the geometry. The comments in the default snippet (and the ", {"type": "q", "text": ["Pass Through"]}, " preset in the menu to the right of the editor) show which parameters you can override, currently ", {"type": "code", "text": ["pos"]}, ", ", {"type": "code", "text": ["elementsize"]}, ", and ", {"type": "code", "text": ["offset"]}, "."], "extent": [14351, 14679]}, {"type": "para", "indent": 4, "text": ["For instance, you can use ", {"type": "code", "text": ["pos += v@noise_offset;"]}, " to offset the sampling\n    location by the value of each element\u2019s ", {"type": "code", "text": ["noise_offset"]}, " vector attribute. As\n    another example, using ", {"type": "code", "text": ["pos = v@noise_offset;"]}, " will overwrite the incoming\n    value with the ", {"type": "code", "text": ["noise_offset"]}, " attribute: this is effectively the same as\n    using ", {"type": "code", "text": ["noise_offset"]}, " as the ", {"type": "ui", "text": ["Location Attribute"]}, "."], "extent": [14679, 15051]}], "container": true, "attrs": {"id": "noiseexpression"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Animation "], "extent": [15051, 15069], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Animate Noise"], "extent": [15098, 15117], "body": [{"type": "para", "indent": 8, "text": ["Vary the generated noise with time. Some noise types do not support this feature."], "extent": [15140, 15235]}, {"type": "para", "indent": 8, "text": ["Applying animation this way on geometries with millions of element count is slower to compute than using expressions such as ", {"type": "code", "text": ["$T * 0.25"]}, " in the ", {"type": "ui", "text": ["Offset"]}, " parameter to ", {"type": "q", "text": ["pan"]}, " across the noise field. "], "extent": [15235, 15451]}], "container": true, "attrs": {"id": "animated"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pulse Duration"], "extent": [15451, 15471], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Animated Noise"]}, " is on, this controls the rate of change of the noise pattern."], "extent": [15499, 15595]}], "container": true, "attrs": {"id": "pulseduration"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkanimation"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Fractal "], "extent": [15595, 15611], "body": [{"type": "para", "indent": 4, "text": ["The fractal controls let you add additional fractal noise on top of the output of the basic noise type."], "extent": [15641, 15754]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fractal Type"], "extent": [6967, 6981], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [7003, 7013], "body": [{"type": "para", "indent": 8, "text": ["Does not add any additional noise on top of the basic noise."], "extent": [7013, 7091]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_none.jpg", "type": "img", "text": ""}], "extent": [7091, 7154]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Standard"], "extent": [7154, 7168], "body": [{"type": "para", "indent": 8, "text": ["Adds pseudo-random noise on top of the basic output."], "extent": [7168, 7238]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_standard.jpg", "type": "img", "text": ""}], "extent": [7238, 7305]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Terrain"], "extent": [7305, 7318], "body": [{"type": "para", "indent": 8, "text": ["Adds noise like ", {"type": "q", "text": ["Standard"]}, " but dampens the noise in the valleys, which can be useful for generating mountainous terrain."], "extent": [7318, 7456]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_terrain.jpg", "type": "img", "text": ""}], "extent": [7456, 7522]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hybrid"], "extent": [7522, 7534], "body": [{"type": "para", "indent": 8, "text": ["Like terrain, but with more sharpness in the valleys."], "extent": [7534, 7597]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fractal"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 4, "text": ["The following parameters are available when Fractal type is anything except ", {"type": "ui", "text": ["None"]}, ".        "], "extent": [15805, 15912]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Max octaves"], "extent": [7674, 7687], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more ", {"type": "q", "text": ["detailed"]}, " the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."], "extent": [7705, 8081]}], "container": true, "attrs": {"id": "oct"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [8081, 8093], "body": [{"type": "para", "indent": 4, "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."], "extent": [8111, 8247]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8247, 8263], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lacunarity.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "lac"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [8312, 8323], "body": [{"type": "para", "indent": 4, "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the ", {"type": "q", "text": ["jaggies"]}, " added to the output. You can use a negative value for roughness."], "extent": [8343, 8546]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8546, 8562], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_roughness.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "rough"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkfractal"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Warping "], "extent": [16052, 16068], "body": [{"type": "para", "indent": 4, "text": [{"type": "ui", "text": ["Lattice Warp"]}, " and ", {"type": "ui", "text": ["Gradient Warp"]}, " are two methods for adding ", {"type": "q", "text": ["fractal-ness"]}, " to the basic noises by warping the noise space."], "extent": [16090, 16228]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Lattice Warp"], "extent": [16228, 16246], "body": [{"type": "para", "indent": 8, "text": ["Adds ", {"type": "q", "text": ["stringiness"]}, " or ", {"type": "q", "text": ["wiriness"]}, " to standard noise."], "extent": [16269, 16334]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [16334, 16350], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lattice_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "disp"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Lattice Warp Size"], "extent": [16409, 16432], "body": [{"type": "para", "indent": 8, "text": ["Controls base feature size of the generated noise. The value applies to each axis."], "extent": [16460, 16560]}], "container": true, "attrs": {"id": "dispesize"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gradient Warp"], "extent": [16560, 16579], "body": [{"type": "para", "indent": 8, "text": ["Widens the peaks or valleys of the noise output."], "extent": [16603, 16665]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [16665, 16681], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_gradient_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "gflow"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Accumulate Lattice Warp"], "extent": [16741, 16770], "body": [{"type": "para", "indent": 8, "text": ["Accumulates the warp for each iteration (octave) of added fractal noise. This can add interesting smudgy effects when used in images, and interesting landmarks when used for terrain."], "extent": [16795, 16991]}], "container": true, "attrs": {"id": "accuml"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Accumulate Gradient Warp"], "extent": [16991, 17021], "body": [{"type": "para", "indent": 8, "text": ["Accumulates the warp for each iteration (octave) of added fractal noise."], "extent": [17046, 17132]}], "container": true, "attrs": {"id": "accumg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow Rotation"], "extent": [9621, 9636], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Noise type"]}, " is ", {"type": "q", "text": ["Flow"]}, ", this controls the rotation of the ", {"type": "q", "text": ["swirl"]}, ", from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Because this parameter is fractional, you can\u2019t just use ", {"type": "code", "text": ["$F"]}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"type": "code", "text": ["$FF / 100"]}, "."], "extent": [9658, 9955]}], "container": true, "attrs": {"id": "flowrot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Distortion"], "extent": [4529, 4542], "body": [{"type": "para", "indent": 4, "text": ["Controls how much the noise is distorted in the direction of decreasing noise values if ", {"type": "ui", "text": ["Distortion"]}, " is greater than ", {"type": "code", "text": ["1"]}, ", and in the direction of increasing noise values if ", {"type": "ui", "text": ["Distortion"]}, " is less than ", {"type": "code", "text": ["1"]}, ". When worley details are added to the noise pattern, the effect of distortion are largely diminished."], "extent": [4559, 4874]}, {"type": "para", "indent": 4, "text": ["Distortion with a value of ", {"type": "code", "text": ["1"]}, ":"], "extent": [4874, 4911]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_perlin_posd.png", "type": "img", "text": ""}], "extent": [4911, 4970]}, {"type": "para", "indent": 4, "text": ["Distortion with a value of ", {"type": "code", "text": ["-1"]}, ":"], "extent": [4970, 5008]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_perlin_negd.png", "type": "img", "text": ""}], "extent": [5008, 5066]}], "container": true, "attrs": {"id": "distort"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch"], "extent": [5066, 5075], "body": [{"type": "para", "indent": 4, "text": ["How much to stretch the noise in each direction. The advantage of using this instead of ", {"type": "ui", "text": ["Element Size"]}, " is that it preserves some details unstretched, making the stretched noise pattern more natural looking."], "extent": [5092, 5307]}, {"type": "para", "indent": 4, "text": ["Comparing Element Scale of ", {"type": "code", "text": ["3"]}, " (left) to Stretch value of ", {"type": "code", "text": ["3"]}, " (right) along the X-axis:"], "extent": [5307, 5399]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 4, "role": "item", "extent": [5399, 5420], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_perlin_stretch.png", "image2": "/images/nodes/vop/cloudnoise_perlin_elementscale.png"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "stretch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Droop"], "extent": [5556, 5563], "body": [{"type": "para", "indent": 4, "text": ["Warps the generated noise such that the noise pattern is bending or hanging towards the given droop direction."], "extent": [5578, 5694]}, {"type": "para", "indent": 4, "text": ["Noise pattern without (left) and with droop applied (right):"], "extent": [5694, 5759]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 4, "role": "item", "extent": [5759, 5780], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_perlin_droop7.png", "image2": "/images/nodes/vop/cloudnoise_perlin_nodroop.png"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "droop"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Droop Direction"], "extent": [5910, 5927], "body": [{"type": "para", "indent": 4, "text": ["The direction in which the noise is warped."], "extent": [5945, 5994]}], "container": true, "attrs": {"id": "droopdir"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkwarping"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Worley Details "], "extent": [17374, 17397], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Add Worley Details"], "extent": [3460, 3480], "body": [{"type": "para", "indent": 4, "text": ["When turned on, a worley noise is combined with the noise pattern (specified by ", {"type": "ui", "text": ["Noise Type"]}, ") to give puffy cloud noise.\n    Enabling this, will largely diminish the distortion effect (specified by ", {"type": "ui", "text": ["Distortion"]}, ")."], "extent": [3510, 3732]}, {"type": "para", "indent": 4, "text": ["Noise pattern with added worley noise:"], "extent": [3732, 3776]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_worley.png", "type": "img", "text": ""}], "extent": [3776, 3829]}], "container": true, "attrs": {"id": "doworleydetails"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend"], "extent": [3829, 3836], "body": [{"type": "para", "indent": 4, "text": ["Controls the amount of mixing between the noise pattern (specified by ", {"type": "ui", "text": ["Noise Type"]}, ") and the worley noise. A value of ", {"type": "code", "text": ["0"]}, " means no worley noise is applied to the noise pattern."], "extent": [3857, 4040]}], "container": true, "attrs": {"id": "worleyblend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Erosion"], "extent": [4040, 4049], "body": [{"type": "para", "indent": 4, "text": ["Controls how fast the edges of the noise pattern turn to zero. The larger the value, the more the edges are eroded creating smaller and smaller cloud patches."], "extent": [4072, 4236]}], "container": true, "attrs": {"id": "worleyerosion"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size Scale"], "extent": [4236, 4256], "body": [{"type": "para", "indent": 4, "text": ["Multiplier on the ", {"type": "ui", "text": ["Element Size"]}, " parameter that effects the worley noise pattern."], "extent": [4288, 4377]}], "container": true, "attrs": {"id": "worleyelementsizescale"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkworleydetails"}}, {"level": 2, "type": "sep", "indent": 0, "text": [" Post-Process "], "extent": [17654, 17673]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Minimum"], "extent": [17673, 17690], "body": [{"type": "para", "indent": 4, "text": ["Clamp the lower end of the generated noise values."], "extent": [17715, 17771]}], "container": true, "attrs": {"id": "doclampmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum"], "extent": [17771, 17780], "body": [{"type": "para", "indent": 4, "text": ["When the checkbox is on, clamp values so they are never less than this value, after noise is applied. For vector attributes, the node applies this minimum to all components."], "extent": [17808, 17987]}], "container": true, "attrs": {"id": "clampminvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Maximum"], "extent": [17987, 18003], "body": [{"type": "para", "indent": 4, "text": ["Clamp the higher end of the generated noise values."], "extent": [18028, 18085]}], "container": true, "attrs": {"id": "doclampmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Maximum"], "extent": [18085, 18094], "body": [{"type": "para", "indent": 4, "text": ["When the checkbox is on, clamp values so they are never greater than this value, after noise is applied. For vector attributes, the node applies this maximum to all components."], "extent": [18122, 18304]}], "container": true, "attrs": {"id": "clampmaxvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Vectors Unit Length"], "extent": [18304, 18330], "body": [{"type": "para", "indent": 4, "text": ["When the ", {"type": "ui", "text": ["Attribute Type"]}, " is ", {"type": "ui", "text": ["Vector"]}, ", turn this on to normalize the output values so they all have the same length (", {"type": "code", "text": ["1"]}, ")."], "extent": [18350, 18482]}], "container": true, "attrs": {"id": "normalize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Recompute Normals"], "extent": [18482, 18501], "body": [{"type": "para", "indent": 4, "text": ["Recomputes normals, if they exist."], "extent": [18522, 18563]}], "container": true, "attrs": {"id": "updatenmls"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [18563, 18572], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustfloat", "type": "link", "text": ["Attribute Adjust Float"], "fullpath": "/nodes/sop/attribadjustfloat.html"}], "extent": [18572, 18627]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustinteger", "type": "link", "text": ["Attribute Adjust Integer"], "fullpath": "/nodes/sop/attribadjustinteger.html"}], "extent": [18627, 18685]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustvector", "type": "link", "text": ["Attribute Adjust Vector"], "fullpath": "/nodes/sop/attribadjustvector.html"}], "extent": [18685, 18741]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribrandomize", "type": "link", "text": ["Attribute Randomize"], "fullpath": "/nodes/sop/attribrandomize.html"}], "extent": [18741, 18790]}], "container": true}], "text": "Related"}], "title": ["Attribute Noise"], "summary": ["Adds or generates noise in geometry attributes."], "included": ["/nodes/vop/cloudnoise", "/nodes/vop/unifiednoise"]}