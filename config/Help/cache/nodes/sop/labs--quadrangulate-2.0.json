{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "labs::sop_quadrangulate::2.0", "icon": "quadrangulate", "tags": "sidefxlabs,  model, gamedev, cleanup", "version": "2.0", "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs Quadrangulate"], "extent": [0, 23]}, {"type": "summary", "indent": 0, "text": [" Simple Node to take a triangulated mesh and attempt to collapse the diagonal edges to return the mesh to a quad dominant state "], "extent": [156, 292]}, {"type": "para", "indent": 0, "text": ["The Quadrangulate Node is designed to remove obvious edges from a triangulated mesh in order to return to what the original quaded mesh would've looked like. "], "extent": [292, 452]}, {"type": "para", "indent": 0, "text": ["It works as a 2 step process, the first step is identifying the diagonal edges in the quads, this can be done iteratively or by assuming a good vertex order. "], "extent": [452, 612]}, {"type": "para", "indent": 0, "text": ["Those edges are then deleted, but in some cases this also deletes polygons that were tris on the original mesh. "], "extent": [612, 726]}, {"type": "para", "indent": 0, "text": ["The second step works by fixing those edges that have more than 4 points, you can either use a polyFill aproach to fix those areas, or another iterative approach where it divides the mesh up until quads are left. "], "extent": [726, 941]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/quadrangulate_2_squab.jpg", "type": "img", "text": ""}], "extent": [941, 984]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/quadrangulate_2_sphere.jpg", "type": "img", "text": ""}], "extent": [984, 1028]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1028, 1040], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 8, "text": ["Reduction Method"], "extent": [1040, 1073], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Method"], "extent": [1073, 1090], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 16, "text": ["Vertex Order"], "extent": [1090, 1121], "body": [{"type": "para", "indent": 24, "text": ["Delete every Nth edge of a model "], "extent": [1121, 1196]}], "container": true}, {"type": "dt", "indent": 16, "text": ["Longest Edge"], "extent": [1196, 1227], "body": [{"type": "para", "indent": 24, "text": ["Iteratively remove the longest edge in the mesh until there are only quads left"], "extent": [1227, 1340]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Edge to Collapse"], "extent": [1340, 1366], "body": [{"type": "para", "indent": 16, "text": ["While in Vertex Order Mode this selects which edge of the triangle to collapse, 1st, 2nd or 3rd"], "extent": [1366, 1479]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Protect Silhouette"], "extent": [1479, 1508], "body": [{"type": "para", "indent": 16, "text": ["Avoid deletion of edges that break the silhouette"], "extent": [1508, 1583]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Normal Angle"], "extent": [1583, 1606], "body": [{"type": "para", "indent": 16, "text": ["When Protect Silhouette is on, this determines the angle between 2 faces to break in. "], "extent": [1606, 1710]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 8, "text": ["Refine Method"], "extent": [1710, 1739], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Refine Method"], "extent": [1739, 1763], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 16, "text": ["PolyFill"], "extent": [1763, 1790], "body": [{"type": "para", "indent": 24, "text": ["Resolve NGons by using the polyFill Quadrilaterals option. "], "extent": [1790, 1915]}], "container": true}, {"type": "dt", "indent": 16, "text": ["Iterative Divide"], "extent": [1915, 1950], "body": [{"type": "para", "indent": 24, "text": ["Iterative slice the NGons until they are all quads or tris. "], "extent": [1950, 2060]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Fallback Fill Mode"], "extent": [2060, 2089], "body": [{"type": "para", "indent": 16, "text": ["When in PolyFill mode, how to resolve cases where the Quadrilaterals option fails "], "extent": [2089, 2197]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Edge to Dissolve"], "extent": [2197, 2223], "body": [{"type": "para", "indent": 16, "text": ["When in Iterative Divide mode, how to determine which edge to be divided"], "extent": [2223, 2321]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["Labs Quadrangulate"], "summary": [" Simple Node to take a triangulated mesh and attempt to collapse the diagonal edges to return the mesh to a quad dominant state "]}