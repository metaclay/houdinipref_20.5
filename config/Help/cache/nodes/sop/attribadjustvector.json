{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "attribadjustvector", "icon": "SOP/attribadjustvector", "since": "18.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Attribute Adjust Vector"], "extent": [109, 137]}, {"type": "summary", "indent": 0, "text": ["Modifies values for a vector-type attribute on the incoming geometry."], "extent": [137, 215]}, {"type": "para", "indent": 0, "text": ["The Attribute Adjust Vector SOP provides an interface to vary ", {"type": "code", "text": ["vector"]}, " type attribute values, reducing the need to create VOP networks or write VEX code. It allows modification to the direction, length or both of these components by a uniform value or a varying value for each element. The varying values can be generated fully randomly or sampled from a spatially-coherent noise pattern."], "extent": [215, 605]}, {"type": "para", "indent": 0, "text": ["This node can also initialize a vector value if the attribute does not exists (specified by ", {"type": "ui", "text": ["Attribute Name"]}, "). Additionally, this node can post-process the values, for example by blending them with another attribute or limiting them to the specified length."], "extent": [605, 866]}, {"type": "para", "indent": 0, "text": ["The following graph provides a basic schematic view of the processes behind Attribute Adjust Float."], "extent": [866, 967]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/sop/aa_graph.svg", "type": "img", "text": ""}], "extent": [967, 1001]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1001, 1013], "body": [{"level": 2, "type": "sep", "indent": 0, "text": [" General "], "extent": [1013, 1028]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [988, 995], "body": [{"type": "para", "indent": 4, "text": ["The subset of the input geometry to apply the modifications to. Leave this blank to affect all elements."], "extent": [1010, 1120]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Name"], "extent": [1192, 1208], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute to create or modify. If the attribute does not exist with the given name, it will be added to the selected ", {"type": "ui", "text": ["Attribute Class"]}, ". As this node can be used on ", {"type": "code", "text": ["vector"]}, " type attributes, if you just give it the vector attribute itself, it will adjust the vector\u2019s length, which is a scalar quantity. But you can also use this node to adjust a single component of the vector, which is also a scalar. To identify which vector component, you can either use the square bracket indexing or dotted subscripts."], "extent": [1224, 1754]}, {"type": "para", "indent": 4, "text": ["When adjusting the vector type ", {"type": "code", "text": ["v"]}, " attribute you can access the components as follows:"], "extent": [1754, 1850]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["First Component "], "role": "th", "extent": [1850, 1873], "container": true}, {"type": "cell", "indent": 8, "text": ["Second Component "], "role": "th", "extent": [1873, 1902], "container": true}, {"type": "cell", "indent": 12, "text": ["Third Component "], "role": "th", "extent": [1902, 1934], "container": true}, {"type": "cell", "indent": 16, "text": ["Fourth Component "], "role": "th", "extent": [1934, 1971]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": [{"type": "code", "text": ["v[0]"]}], "role": "td", "extent": [1971, 1992], "container": true}, {"type": "cell", "indent": 8, "text": [{"type": "code", "text": ["v[1]"]}], "role": "td", "extent": [1992, 2009], "container": true}, {"type": "cell", "indent": 12, "text": [{"type": "code", "text": ["v[2]"]}], "role": "td", "extent": [2009, 2029], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": [{"type": "code", "text": ["v[3]"]}, " "], "extent": [2029, 2053]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": [{"type": "code", "text": ["v.x"]}], "role": "td", "extent": [2053, 2064], "container": true}, {"type": "cell", "indent": 8, "text": [{"type": "code", "text": ["v.y"]}], "role": "td", "extent": [2064, 2079], "container": true}, {"type": "cell", "indent": 13, "text": [{"type": "code", "text": ["v.z"]}], "role": "td", "extent": [2079, 2099], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 17, "text": [{"type": "code", "text": ["v.w"]}], "extent": [2099, 2122]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": [{"type": "code", "text": ["v.r"]}], "role": "td", "extent": [2122, 2133], "container": true}, {"type": "cell", "indent": 8, "text": [{"type": "code", "text": ["v.g"]}], "role": "td", "extent": [2133, 2148], "container": true}, {"type": "cell", "indent": 13, "text": [{"type": "code", "text": ["v.b"]}], "role": "td", "extent": [2148, 2168], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 17, "text": [{"type": "code", "text": ["v.a"]}, "  "], "extent": [2168, 2193]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": [{"type": "code", "text": ["v.u"]}], "role": "td", "extent": [2193, 2204], "container": true}, {"type": "cell", "indent": 8, "text": [{"type": "code", "text": ["v.v"]}], "role": "td", "extent": [2204, 2219], "container": true}, {"type": "cell", "indent": 13, "text": [{"type": "code", "text": []}], "role": "td", "extent": [2219, 2236], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": [{"type": "code", "text": []}], "extent": [2236, 2273]}]}], "divider": false}]}], "container": true, "attrs": {"id": "attrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Class"], "extent": [2273, 2290], "body": [{"type": "para", "indent": 4, "text": ["Element type for the destination attribute (specified by ", {"type": "ui", "text": ["Attribute Name"]}, ")."], "extent": [2305, 2388]}], "container": true, "attrs": {"id": "class"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Component Scope"], "extent": [1139, 1156], "body": [{"type": "para", "indent": 4, "text": ["Specifies which vector components will be changed by this node. This filter applies as the last step, when the adjustment value is combined with the incoming attribute."], "extent": [1180, 1358]}], "container": true, "attrs": {"id": "componentscope"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Pre-Process "], "extent": [1358, 1378]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Pre-Process"], "extent": [1378, 1399], "body": [{"type": "para", "indent": 4, "text": ["Enables a set of controls to fine tune the incoming attribute value. All pre-process modifications will take place before adjustment is applied to the attribute. Pre-Process also allows you to initialize the attribute if it does not exists. "], "extent": [1426, 1677]}], "container": true, "attrs": {"id": "enable_preprocess"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Overwrite Initial Value"], "extent": [1677, 1702], "body": [{"type": "para", "indent": 4, "text": ["Sets the value for the attribute. Use it to initialize a new attribute or to overwrite any existing attribute value."], "extent": [1723, 1845]}], "container": true, "attrs": {"id": "doinitvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Initial Value From"], "extent": [1845, 1865], "body": [{"type": "para", "indent": 4, "text": ["Controls how the initial value will be generated. ", {"type": "ui", "text": ["Constant Value"]}, " will be the same for all elements in the geometry. ", {"type": "ui", "text": ["Normal Attribute"]}, " will auto-compute the normals from the geometry, while vector attribute will copy the given attribute\u2019s values into the destination attribute."], "extent": [1888, 2178]}], "container": true, "attrs": {"id": "initvaluefrom"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Initial Vector"], "extent": [2178, 2194], "body": [{"type": "para", "indent": 4, "text": ["This value will be set for all elements in the geometry."], "extent": [2213, 2279]}], "container": true, "attrs": {"id": "initvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Vector Attribute"], "extent": [2279, 2297], "body": [{"type": "para", "indent": 4, "text": ["The values of this attribute will be copied into the destination attribute (specified by ", {"type": "ui", "text": ["Attribute Name"]}, ")."], "extent": [2320, 2439]}], "container": true, "attrs": {"id": "initvecattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reverse Direction"], "extent": [2439, 2458], "body": [{"type": "para", "indent": 4, "text": ["Reverses the direction of vector while keeping the vector length the same."], "extent": [2475, 2559]}], "container": true, "attrs": {"id": "reverse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Vectors Unit Length"], "extent": [2559, 2585], "body": [{"type": "para", "indent": 4, "text": ["Normalizes the vector, setting its length to ", {"type": "code", "text": ["1"]}, " while keeping the direction unchanged."], "extent": [2607, 2707]}], "container": true, "attrs": {"id": "prenormalize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Length Scale"], "extent": [2707, 2721], "body": [{"type": "para", "indent": 4, "text": ["Scales the length of the vector while keeping the vector direction the same."], "extent": [2739, 2825]}], "container": true, "attrs": {"id": "prescale"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Adjustment Value "], "extent": [2825, 2850]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Adjust Value"], "extent": [7417, 7432], "body": [{"type": "para", "indent": 4, "text": ["Generates a value that will be combined with the incoming attribute value. When this option is turned off, only post-processing will be done."], "extent": [7453, 7600]}], "container": true, "attrs": {"id": "adjustvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Adjustment for"], "extent": [2896, 2912], "body": [{"type": "para", "indent": 4, "text": ["Vectors have both length and direction. This allows you to select which of these vector properties to adjust."], "extent": [2936, 3051]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3051, 3061], "body": [{"type": "para", "indent": 8, "text": ["If the incoming vector is zero-valued, both ", {"type": "ui", "text": ["Direction Only"]}, " and ", {"type": "ui", "text": ["Length Only"]}, " will leave it at zero."], "extent": [3061, 3176]}], "container": true}], "container": true, "role": "item_group"}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Direction & Length"], "extent": [3176, 3200], "body": [{"type": "para", "indent": 8, "text": ["Modifies the vector as a whole. This is the only mode that can adjust zero-valued vectors."], "extent": [3200, 3308]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Direction Only"], "extent": [3308, 3328], "body": [{"type": "para", "indent": 8, "text": ["Modifies the vector\u2019s direction, keeping its length unchanged. For example, this mode will change the direction of motion without affecting the speed, when working with a velocity attribute."], "extent": [3328, 3536]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Length Only"], "extent": [3536, 3553], "body": [{"type": "para", "indent": 8, "text": ["Modifies the vector\u2019s length, keeping its direction the same. For example, this mode will change the speed without affecting the direction of motion, when working with a velocity attribute."], "extent": [3553, 3752]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "adjustquantity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Operation"], "extent": [3752, 3763], "body": [{"type": "para", "indent": 4, "text": ["Specifies how to combine the generated adjustment value with the incoming attribute. If the attribute does not exist on the input (and the pre-processing has not set an initial value) all operations will act as ", {"type": "ui", "text": ["Set Always"]}, " when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction & Length"]}, ". If ", {"type": "ui", "text": ["Adjustment for"]}, " is set to one of the other options in the same situation, result will be the zero vector."], "extent": [3789, 4190]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Set Initial"], "extent": [4190, 4207], "body": [{"type": "para", "indent": 8, "text": ["Use this operation if you want to ensure the attribute is created, but don\u2019t want to overwrite any existing value. If the target attribute is already present, its values will be left untouched. This operation is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction & Length"]}, "."], "extent": [4207, 4509]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Always"], "extent": [4509, 4525], "body": [{"type": "para", "indent": 8, "text": ["Use this operation if you want to overwrite any existing value with the generated adjustment value. This operation is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction & Length"]}, "."], "extent": [4525, 4725]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set"], "extent": [4725, 4734], "body": [{"type": "para", "indent": 8, "text": ["Use this operation if you want to overwrite any existing value with the generated adjustment value. This operation is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Length Only"]}, "."], "extent": [4734, 4927]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add"], "extent": [4927, 4936], "body": [{"type": "para", "indent": 8, "text": ["The generated adjustment value will be added to the existing attribute value."], "extent": [4936, 5023]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Subtract"], "extent": [5023, 5037], "body": [{"type": "para", "indent": 8, "text": ["The generated adjustment value will be subtracted from the existing attribute value."], "extent": [5037, 5131]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Multiply"], "extent": [5131, 5145], "body": [{"type": "para", "indent": 8, "text": ["The existing attribute value will be multiplied by the generated adjustment value. This operation is not available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, "."], "extent": [5145, 5323]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum"], "extent": [5323, 5336], "body": [{"type": "para", "indent": 8, "text": ["Output will be minimum of the existing attribute value and the adjustment value. This operation is not available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, "."], "extent": [5336, 5520]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maximum"], "extent": [5520, 5533], "body": [{"type": "para", "indent": 8, "text": ["Output will be maximum of the existing attribute value and the adjustment value. This operation is not available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, "."], "extent": [5533, 5709]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Rotate"], "extent": [5709, 5721], "body": [{"type": "para", "indent": 8, "text": ["The generated adjustment value will be used to rotate the existing attribute value around a given axis. This operation is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, "."], "extent": [5721, 5921]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Spread"], "extent": [5921, 5933], "body": [{"type": "para", "indent": 8, "text": ["The generated adjustment value controls the angle between the output vector and the existing attribute value. In other words, the output vector will be on the cone around the existing attribute value, with adjustment value controlling the size of the opening for this cone. This operation is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, "."], "extent": [5933, 6303]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Interpolate"], "extent": [6303, 6320], "body": [{"type": "para", "indent": 8, "text": ["The generated adjustment value will be used to spherically interpolate the direction between the existing attribute value and a given goal direction. This operation is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, "."], "extent": [6320, 6566]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "dirlen_operation"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Adjust With"], "extent": [6566, 6579], "body": [{"type": "para", "indent": 4, "text": ["Specifies how the adjustment value is generated. ", {"type": "ui", "text": ["Constant Value"]}, " will use the same ", {"type": "ui", "text": ["Value"]}, " for every element. ", {"type": "ui", "text": ["Random"]}, " and ", {"type": "ui", "text": ["Noise"]}, " will generate varying values across each element of the geometry, in which case varying values will be inside a well defined range or selected from a list of specific values."], "extent": [6605, 6925]}, {"type": "para", "indent": 4, "text": ["The meaning of the adjustment value depends on other parameters, namely ", {"type": "ui", "text": ["Adjustment for"]}, " and ", {"type": "ui", "text": ["Operation"]}, ". When ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Length & Direction"]}, ", the adjustment value will be a vector that is combined with the existing attribute. If adjusting for ", {"type": "ui", "text": ["Length Only"]}, ", the adjustment value will be a single number that is combined with the incoming vector length. When adjusting ", {"type": "ui", "text": ["Direction Only"]}, ", the adjustment value is a vector if the ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Add"]}, " or ", {"type": "ui", "text": ["Subtract"]}, "; otherwise, it is a single number. With ", {"type": "ui", "text": ["Rotate"]}, " and ", {"type": "ui", "text": ["Spread"]}, ", this single number represents the angle that\u2019s used for the respective operation. Lastly, the adjustment value holds an interpolation bias that controls the blending weights between the ", {"type": "ui", "text": ["Goal Direction"]}, " and the incoming direction when ", {"type": "ui", "text": ["Interpolate"]}, " is used."], "extent": [6925, 7763]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Constant"], "extent": [7763, 7777], "body": [{"type": "para", "indent": 8, "text": ["The adjustment value will be the same for all elements in the geometry.\n        This option is useful for applying the exact same operation to all\n        elements, such as rotating all vectors by the same amount about an axis."], "extent": [7777, 8014]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Random"], "extent": [8014, 8026], "body": [{"type": "para", "indent": 8, "text": ["The adjustment values will be sampled fully randomly. Adjustment values can be inside a well defined range or selected from a list of specific values."], "extent": [8026, 8186]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Noise"], "extent": [8186, 8197], "body": [{"type": "para", "indent": 8, "text": ["The adjustment values will be sampled based on a coherent noise field using the ", {"scheme": "Node", "value": "/nodes/sop/attribnoise", "type": "link", "text": ["Attribute Noise SOP"], "fullpath": "/nodes/sop/attribnoise.html"}, ". Adjustment values can be inside a well defined range or selected from a list of specific values."], "extent": [8197, 8427]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Attribute"], "extent": [8427, 8442], "body": [{"type": "para", "indent": 8, "text": ["Value of the attribute specified by ", {"type": "ui", "text": ["Attribute Name"]}, " will be used as the adjustment value. This option is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Length Only"]}, "."], "extent": [8442, 8629]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "dirlen_valuetype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Range Values"], "extent": [8629, 8643], "body": [{"type": "para", "indent": 4, "text": ["The adjustment value will be generated in the selected range. This parameter controls how this range is specified. You can also provide a list of exact values by selecting ", {"type": "ui", "text": ["Specific Values"]}, "."], "extent": [8670, 8868]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Positive"], "extent": [8868, 8882], "body": [{"type": "para", "indent": 8, "text": ["Every component of the adjustment value will fall between ", {"type": "code", "text": ["0"]}, " and\n        ", {"type": "ui", "text": ["Amplitude"]}, ". This option is available when the adjustment value is a vector."], "extent": [8882, 9044]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Zero Centered"], "extent": [9044, 9063], "body": [{"type": "para", "indent": 8, "text": ["Every component of the adjustment value will fall between negative half\n        of ", {"type": "ui", "text": ["Amplitude"]}, " and its positive counterpart. For example, if\n        ", {"type": "ui", "text": ["Amplitude"]}, " is ", {"type": "code", "text": ["2"]}, ", component values will be between ", {"type": "code", "text": ["-1"]}, " and ", {"type": "code", "text": ["1"]}, ".\n        This option is available when the adjustment value is a vector."], "extent": [9063, 9364]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Min/Max"], "extent": [9364, 9377], "body": [{"type": "para", "indent": 8, "text": ["The adjustment value will fall between the specified minimum and maximum\n        values. If the adjustment value is a vector, range limits apply to each\n        component."], "extent": [9377, 9566]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Specific Values"], "extent": [9566, 9587], "body": [{"type": "para", "indent": 8, "text": ["The adjustment value will be one of the discrete listed values. The\n        probability of selecting each value is proportional to its ", {"type": "ui", "text": ["Weight"]}, ".\n        ", {"type": "ui", "text": ["Pattern Type"]}, " controls how the adjustment value is sampled for each\n        element."], "extent": [9587, 9839]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Min + Range Length"], "extent": [9839, 9863], "body": [{"type": "para", "indent": 8, "text": ["The range contains all values between ", {"type": "ui", "text": ["Min Value"]}, " and ", {"type": "ui", "text": ["Min Value + Range Length"]}, ". For example, if ", {"type": "ui", "text": ["Min Value"]}, " is ", {"type": "code", "text": ["2"]}, " and ", {"type": "ui", "text": ["Range Length"]}, " is ", {"type": "code", "text": ["5"]}, ", the minimum and maximum limits of the range will be ", {"type": "code", "text": ["2"]}, " and ", {"type": "code", "text": ["7"]}, ", respectively. This option is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Length Only"]}, "."], "extent": [9863, 10184]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Middle \u00b1 Range Length"], "extent": [10184, 10211], "body": [{"type": "para", "indent": 8, "text": ["The range contains all values between ", {"type": "ui", "text": ["Middle Value - Range Length / 2"]}, " and ", {"type": "ui", "text": ["Middle Value + Range Length / 2"]}, ". For example, if ", {"type": "ui", "text": ["Middle Value"]}, " is ", {"type": "code", "text": ["8"]}, " and ", {"type": "ui", "text": ["Range Length"]}, " is ", {"type": "code", "text": ["4"]}, ", the minimum and maximum limits of the range will be ", {"type": "code", "text": ["6"]}, " and ", {"type": "code", "text": ["10"]}, ", respectively. This option is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Length Only"]}, "."], "extent": [10211, 10565]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "dirlen_noiserange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constant Value"], "extent": [10565, 10581], "body": [{"type": "para", "indent": 4, "text": ["Sets the adjustment to this value for every element in the geometry."], "extent": [10609, 10683]}], "container": true, "attrs": {"id": "dirlen_singlevalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotate Angle"], "extent": [10683, 10697], "body": [{"type": "para", "indent": 4, "text": ["Sets the adjustment to this value for every element in the geometry."], "extent": [10720, 10794]}, {"type": "para", "indent": 4, "text": ["This parameter replaces ", {"type": "ui", "text": ["Constant Value"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Rotate"]}, "."], "extent": [10794, 10883]}], "container": true, "attrs": {"id": "dir_singlerot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Spread Angle"], "extent": [10883, 10897], "body": [{"type": "para", "indent": 4, "text": ["Sets the adjustment to this value for every element in the geometry."], "extent": [10923, 10997]}, {"type": "para", "indent": 4, "text": ["This parameter replaces ", {"type": "ui", "text": ["Constant Value"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to\n    ", {"type": "ui", "text": ["Spread"]}, "."], "extent": [10997, 11090]}], "container": true, "attrs": {"id": "dir_singlespread"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias"], "extent": [11090, 11096], "body": [{"type": "para", "indent": 4, "text": ["Sets the adjustment to this value for every element in the geometry."], "extent": [11120, 11194]}, {"type": "para", "indent": 4, "text": ["This parameter replaces ", {"type": "ui", "text": ["Constant Value"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to\n    ", {"type": "ui", "text": ["Interpolate"]}, "."], "extent": [11194, 11292]}], "container": true, "attrs": {"id": "dir_singlebias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Amplitude"], "extent": [11292, 11303], "body": [{"type": "para", "indent": 4, "text": ["When using ", {"type": "ui", "text": ["Positive Values"]}, ", the generated ", {"type": "code", "text": ["0 "]}, "to ", {"type": "code", "text": ["1"]}, " vector will be multiplied by this amplitude. With ", {"type": "ui", "text": ["Zero Centered Values"]}, ", the vector will be shifted to a new ", {"type": "code", "text": ["-0.5"]}, " to ", {"type": "code", "text": ["0.5"]}, " range before it is multiplied by this amplitude value."], "extent": [11329, 11578]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " button to access per axis control."], "extent": [11578, 11673]}], "container": true, "attrs": {"id": "dirlen_amplitude"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Amplitude Scale"], "extent": [11673, 11690], "body": [{"type": "para", "indent": 4, "text": ["The amplitude along each axis is governed by the multiplication of ", {"type": "ui", "text": ["Amplitude"]}, " with the applicable component of this parameter."], "extent": [11721, 11860]}], "container": true, "attrs": {"id": "dirlen_amplitudescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Value"], "extent": [11860, 11871], "body": [{"type": "para", "indent": 4, "text": ["Sets the minimum limit of the range."], "extent": [11896, 11938]}, {"type": "para", "indent": 4, "text": ["When the adjustment value is a vector, you can click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " button to access per axis control."], "extent": [11938, 12080]}], "container": true, "attrs": {"id": "dirlen_rangemin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Value Scale"], "extent": [12080, 12097], "body": [{"type": "para", "indent": 4, "text": ["The minimum range along each axis is governed by the multiplication of ", {"type": "ui", "text": ["Min Value"]}, " with the applicable component of this parameter. This is only available when the adjustment value is a vector."], "extent": [12127, 12332]}], "container": true, "attrs": {"id": "dirlen_rangeminscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Value"], "extent": [12332, 12343], "body": [{"type": "para", "indent": 4, "text": ["Sets the maximum limit of the range."], "extent": [12368, 12410]}, {"type": "para", "indent": 4, "text": ["When the adjustment value is a vector, you can click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " button to access per axis control.  "], "extent": [12410, 12554]}], "container": true, "attrs": {"id": "dirlen_rangemax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Value Scale"], "extent": [12554, 12571], "body": [{"type": "para", "indent": 4, "text": ["The maximum range along each axis is governed by the multiplication of ", {"type": "ui", "text": ["Max Value"]}, " with the applicable component of this parameter. This is only available when the adjustment value is a vector."], "extent": [12606, 12807]}], "container": true, "attrs": {"id": "dirlen_rangemaxscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotate Angle Min"], "extent": [12807, 12825], "body": [{"type": "para", "indent": 4, "text": ["Sets the minimum limit of the range."], "extent": [12845, 12891]}, {"type": "para", "indent": 4, "text": ["This parameter replaces ", {"type": "ui", "text": ["Min Value"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Rotate"]}, "."], "extent": [12891, 12975]}], "container": true, "attrs": {"id": "dir_rotmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotate Angle Max"], "extent": [12975, 12993], "body": [{"type": "para", "indent": 4, "text": ["Sets the maximum limit of the range."], "extent": [13013, 13055]}, {"type": "para", "indent": 4, "text": ["This parameter replaces ", {"type": "ui", "text": ["Max Value"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Rotate"]}, "."], "extent": [13055, 13139]}], "container": true, "attrs": {"id": "dir_rotmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Spread Angle Min"], "extent": [13139, 13157], "body": [{"type": "para", "indent": 4, "text": ["Sets the minimum limit of the range."], "extent": [13180, 13226]}, {"type": "para", "indent": 4, "text": ["This parameter replaces ", {"type": "ui", "text": ["Min Value"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Spread"]}, "."], "extent": [13226, 13310]}], "container": true, "attrs": {"id": "dir_spreadmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Spread Angle Max"], "extent": [13310, 13328], "body": [{"type": "para", "indent": 4, "text": ["Sets the maximum limit of the range."], "extent": [13351, 13393]}, {"type": "para", "indent": 4, "text": ["This parameter replaces ", {"type": "ui", "text": ["Max Value"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Spread"]}, "."], "extent": [13393, 13477]}], "container": true, "attrs": {"id": "dir_spreadmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias Min"], "extent": [13477, 13487], "body": [{"type": "para", "indent": 4, "text": ["Sets the minimum limit of the range."], "extent": [13508, 13550]}, {"type": "para", "indent": 4, "text": ["This parameter replaces ", {"type": "ui", "text": ["Min Value"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Interpolate"]}, "."], "extent": [13550, 13639]}], "container": true, "attrs": {"id": "dir_biasmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias Max"], "extent": [13639, 13649], "body": [{"type": "para", "indent": 4, "text": ["Sets the maximum limit of the range."], "extent": [13670, 13712]}, {"type": "para", "indent": 4, "text": ["This parameter replaces ", {"type": "ui", "text": ["Max Value"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Interpolate"]}, "."], "extent": [13712, 13801]}], "container": true, "attrs": {"id": "dir_biasmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Values"], "extent": [13801, 13819], "body": [{"type": "para", "indent": 4, "text": ["Controls the number of sets of possible adjustment values. The probability of selecting each value is proportional to its ", {"type": "ui", "text": ["Weight"]}, ". This parameter is applicable when ", {"type": "ui", "text": ["Range Values"]}, " is set to ", {"type": "ui", "text": ["Specific Values"]}, "."], "extent": [13843, 14064]}, {"type": "para", "indent": 4, "text": ["If the adjustment value is a vector, each set corresponds to a single vector value. Otherwise, each set can be a single value or a list of numbers."], "extent": [14064, 14217]}], "container": true, "attrs": {"id": "dirlen_nvalues"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Value"], "extent": [14217, 14224], "body": [{"type": "para", "indent": 4, "text": ["Sets an exact adjustment value."], "extent": [14247, 14288]}, {"type": "para", "indent": 4, "text": ["This parameter is replaced by ", {"type": "ui", "text": ["Rotate Angle"]}, ", ", {"type": "ui", "text": ["Spread Angle"]}, ", and\n    ", {"type": "ui", "text": ["Bias"]}, " when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, " and\n    ", {"type": "ui", "text": ["Operation"]}, " is ", {"type": "ui", "text": ["Rotate"]}, ", ", {"type": "ui", "text": ["Spread"]}, ", or ", {"type": "ui", "text": ["Interpolate"]}, ", respectively."], "extent": [14288, 14512]}], "container": true, "attrs": {"id": "dirlen_value#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotate Angle"], "extent": [14512, 14526], "body": [{"type": "para", "indent": 4, "text": ["Sets an exact adjustment value. This parameter is available when\n    ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, " and ", {"type": "ui", "text": ["Operation"]}, " is\n    ", {"type": "ui", "text": ["Rotate"]}, "."], "extent": [14549, 14708]}], "container": true, "attrs": {"id": "dir_rotvalues"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Spread Angle"], "extent": [14708, 14722], "body": [{"type": "para", "indent": 4, "text": ["Sets an exact adjustment value. This parameter is available when\n    ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, " and ", {"type": "ui", "text": ["Operation"]}, " is\n    ", {"type": "ui", "text": ["Spread"]}, "."], "extent": [14748, 14907]}], "container": true, "attrs": {"id": "dir_spreadvalue#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias"], "extent": [14907, 14913], "body": [{"type": "para", "indent": 4, "text": ["Sets an exact adjustment value. This parameter is available when\n    ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, " and ", {"type": "ui", "text": ["Operation"]}, " is\n    ", {"type": "ui", "text": ["Interpolate"]}, "."], "extent": [14937, 15101]}], "container": true, "attrs": {"id": "dir_biasvalue#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Value Type"], "extent": [15101, 15113], "body": [{"type": "para", "indent": 4, "text": ["In ", {"type": "ui", "text": ["Constant"]}, " mode, the set will only contain the single value. In\n    ", {"type": "ui", "text": ["List of Values"]}, " mode, the set consists of multiple values, as declared by\n    the subsequent list parameter. These options are unavailable when the\n    adjustment value is a vector."], "extent": [15137, 15404]}], "container": true, "attrs": {"id": "len_valuetype#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weight"], "extent": [15404, 15412], "body": [{"type": "para", "indent": 4, "text": ["Samples the given adjustment value with the specified weight. Values with lower ", {"type": "ui", "text": ["Weight"]}, " will be selected less frequently. Each adjustment value has the same probability when all weights are the same."], "extent": [15436, 15644]}], "container": true, "attrs": {"id": "dirlen_weight#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Value List"], "extent": [15644, 15656], "body": [{"type": "para", "indent": 4, "text": ["Sets adjustment values by a list of independent range sequences or numbers.\n    The listings can be separated by whitespace, commas, and semi-colons. Use the\n    syntax ", {"type": "code", "text": ["min-max:stepsize"]}, ", which expands to values between ", {"type": "code", "text": ["min"]}, " and ", {"type": "code", "text": ["max"]}, ",\n    separated by ", {"type": "code", "text": ["stepsize"]}, ". When ", {"type": "code", "text": ["stepsize"]}, " is not provided, the default value\n    of ", {"type": "code", "text": ["1"]}, " is used."], "extent": [15677, 16020]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when the adjustment value is not a vector.\n    When ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Direction Only"]}, " and ", {"type": "ui", "text": ["Operation"]}, " is\n    ", {"type": "ui", "text": ["Rotate"]}, ", ", {"type": "ui", "text": ["Spread"]}, ", or ", {"type": "ui", "text": ["Interpolate"]}, ", this parameter is replaced by\n    ", {"type": "ui", "text": ["Rotate Angle List"]}, ", ", {"type": "ui", "text": ["Spread Angle List"]}, ", or ", {"type": "ui", "text": ["Bias List"]}, ",\n    respectively."], "extent": [16020, 16343]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [16343, 16353], "body": [{"type": "para", "indent": 8, "text": ["Each expanded values will be assigned the same ", {"type": "ui", "text": ["Weight"]}, "."], "extent": [16353, 16421]}], "container": true}], "container": true, "role": "item_group"}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Value List "], "role": "th", "extent": [16421, 16439], "container": true}, {"type": "cell", "indent": 8, "text": ["Expanded Values "], "role": "th", "extent": [16439, 16467]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["5 "], "role": "td", "extent": [16467, 16488], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["5.0 "], "extent": [16488, 16502]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["3;5 7 "], "role": "td", "extent": [16502, 16526], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["3.0, 5.0, 7.0"], "extent": [16526, 16549]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["1-3 "], "role": "td", "extent": [16549, 16567], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["1.0, 2.0, 3.0"], "extent": [16567, 16594]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["0-1:0.25 "], "role": "td", "extent": [16594, 16609], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["0.0, 0.25, 0.5, 0.75, 1.0"], "extent": [16609, 16644]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["0-1:0.25 5; 8-12:2 "], "role": "td", "extent": [16644, 16669], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["0.0, 0.25, 0.5, 0.75, 1.0, 5.0, 8.0, 10.0, 12.0"], "extent": [16669, 16726]}]}], "divider": false}]}], "container": true, "attrs": {"id": "len_values#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotate Angle List"], "extent": [16726, 16745], "body": [{"type": "para", "indent": 4, "text": ["Sets adjustment values by a list of independent range sequences or numbers.\n    This parameter replaces ", {"type": "ui", "text": ["Value List"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to\n    ", {"type": "ui", "text": ["Rotate"]}, "; see the description of ", {"type": "ui", "text": ["Value List"]}, " for more information."], "extent": [16769, 16998]}], "container": true, "attrs": {"id": "dir_rotvalues#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Spread Angle List"], "extent": [16998, 17017], "body": [{"type": "para", "indent": 4, "text": ["Sets adjustment values by a list of independent range sequences or numbers.\n    This parameter replaces ", {"type": "ui", "text": ["Value List"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to\n    ", {"type": "ui", "text": ["Spread"]}, "; see the description of ", {"type": "ui", "text": ["Value List"]}, " for more information."], "extent": [17044, 17273]}], "container": true, "attrs": {"id": "dir_spreadvalues#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias List"], "extent": [17273, 17284], "body": [{"type": "para", "indent": 4, "text": ["Sets adjustment values by a list of independent range sequences or numbers.\n    This parameter replaces ", {"type": "ui", "text": ["Value List"]}, " when ", {"type": "ui", "text": ["Operation"]}, " is set to\n    ", {"type": "ui", "text": ["Interpolate"]}, "; see the description of ", {"type": "ui", "text": ["Value List"]}, " for more information."], "extent": [17309, 17543]}], "container": true, "attrs": {"id": "dir_biasvalues#"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Axis of Rotation"], "extent": [17543, 17561], "body": [{"type": "para", "indent": 4, "text": ["The incoming vector will be rotated about this axis. When ", {"type": "ui", "text": ["Constant Value"]}, "\n    is used for this parameter, all elements in the geometry will rotate around\n    the same axis. Set the menu to ", {"type": "ui", "text": ["From Attribute"]}, " to use a different axis\n    per element. This parameter is only available when ", {"type": "ui", "text": ["Operation"]}, " is set to\n    ", {"type": "ui", "text": ["Rotate"]}, "."], "extent": [17588, 17926]}], "container": true, "attrs": {"id": "dir_singlerotaxis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Axis Attribute"], "extent": [17926, 17942], "body": [{"type": "para", "indent": 4, "text": ["A vector attribute to use as the axis of rotation. This attribute must be\n    present on the appropriate elements (as set by ", {"type": "ui", "text": ["Attribute Class"]}, "). This\n    parameter is only available when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Rotate"]}, "."], "extent": [17975, 18205]}], "container": true, "attrs": {"id": "dir_singlerotaxisattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Goal Direction"], "extent": [18205, 18221], "body": [{"type": "para", "indent": 4, "text": ["The desired direction the incoming attribute value will blend towards. All elements in the geometry will use the same goal direction, when ", {"type": "ui", "text": ["Constant Value"]}, " is used for this parameter. Set the menu to ", {"type": "ui", "text": ["From Attribute"]}, " to use a different goal direction per element. This parameter is only available when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Interpolate"]}, "."], "extent": [18242, 18597]}], "container": true, "attrs": {"id": "dir_goaldir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Axis Attribute"], "extent": [18597, 18613], "body": [{"type": "para", "indent": 4, "text": ["A vector attribute to use as the goal direction. This attribute must be\n    present on the appropriate elements (as set by ", {"type": "ui", "text": ["Attribute Class"]}, "). This\n    parameter is only available when ", {"type": "ui", "text": ["Operation"]}, " is set to ", {"type": "ui", "text": ["Interpolate"]}, "."], "extent": [18640, 18874]}], "container": true, "attrs": {"id": "dir_goaldirattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Value Distribution"], "extent": [18874, 18894], "body": [{"type": "para", "indent": 4, "text": ["Provides a way to control distribution of the generated adjustment values.\n    This parameter is only available when modifying ", {"type": "ui", "text": ["Length Only"]}, " with\n    ", {"type": "ui", "text": ["Noise"]}, " or ", {"type": "ui", "text": ["Random"]}, " adjustments."], "extent": [18922, 19116]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Uniform"], "extent": [19116, 19129], "body": [{"type": "para", "indent": 8, "text": ["Generated adjustment values will be uniformly distributed within the custom range."], "extent": [19129, 19221]}, {"type": "para", "indent": 8, "text": ["Elements are distributed in ", {"type": "code", "text": ["-1"]}, " to ", {"type": "code", "text": ["1"]}, " range using different pattern types:"], "extent": [19221, 19315]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/sop/aaf_pattern_type.jpg", "type": "img", "text": ""}], "extent": [19315, 19365]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Uniform with Remapping"], "extent": [19365, 19393], "body": [{"type": "para", "indent": 8, "text": ["The generated value will be fed through the ", {"type": "ui", "text": ["Remap Ramp"]}, " to produce the final adjustment value. You can use this option to shift the values or create gaps in the given range."], "extent": [19393, 19579]}, {"type": "para", "indent": 8, "text": ["Elements are distributed in ", {"type": "code", "text": ["-1"]}, " to ", {"type": "code", "text": ["1"]}, " range using different pattern types, while shifting values towards the minimum limit of the range:"], "extent": [19579, 19735]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/sop/aaf_remapping.jpg", "type": "img", "text": ""}], "extent": [19735, 19782]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Uniform with Outliers"], "extent": [19782, 19809], "body": [{"type": "para", "indent": 8, "text": ["Allows for a percentage of elements to extend beyond the given range.\n        Use the outlier visualizer button next to ", {"type": "ui", "text": ["Outlier Attribute"]}, " to see\n        which elements are selected as outliers. It is possible to extend the\n        range beyond the minimum and/or maximum limits, either by adding or\n        multiplying the selected limits with ", {"type": "ui", "text": ["Outlier Range"]}, ". For example, you\n        can set ", {"type": "ui", "text": ["Outlier Percent"]}, " to ", {"type": "code", "text": ["15"]}, " and ", {"type": "ui", "text": ["Outlier Range"]}, " to ", {"type": "code", "text": ["2"]}, ",\n        forcing 15% of elements to get an adjustment value that is up to 2\n        larger (in ", {"type": "ui", "text": ["Additive"]}, " mode) or twice as large (in ", {"type": "ui", "text": ["Multiplicative"]}, "\n        mode). This will produce vector lengths that are controllably larger for\n        15% of the elements."], "extent": [19809, 20540]}, {"type": "para", "indent": 8, "text": ["Using outliers to extend both minimum and maximum range limit:"], "extent": [20540, 20620]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/sop/aaf_use_outliers.jpg", "type": "img", "text": ""}, " "], "extent": [20620, 20671]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [20671, 20685], "body": [{"type": "para", "indent": 12, "text": ["It is possible to achieve similar value manipulation by using\n            ", {"type": "ui", "text": ["Uniform with Remapping"]}, ". However, ", {"type": "ui", "text": ["Uniform with Outliers"]}, "\n            lets you precisely control the proportion of points that fall\n            outside of the proper range."], "extent": [20685, 20950]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "attrs": {"id": "len_distribinrange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remap Ramp"], "extent": [20950, 20962], "body": [{"type": "para", "indent": 4, "text": ["The intermediate uniformly-distributed value will be fed through this ramp\n    to obtain the adjustment value. The vertical axis of this ramp spans the custom range."], "extent": [20985, 21160]}], "container": true, "attrs": {"id": "len_remapramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Outlier Percent"], "extent": [21160, 21177], "body": [{"type": "para", "indent": 4, "text": ["Controls the number of outliers. A value of ", {"type": "code", "text": ["15"]}, " means that the adjustment value for 15% of all elements will fall outside the original range."], "extent": [21205, 21358]}], "container": true, "attrs": {"id": "len_outlierpercent"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Outlier Range"], "extent": [21358, 21373], "body": [{"type": "para", "indent": 4, "text": ["Controls how much the outlier range extends beyond the original. You can extend the maximum range, minimum range, or both either by multiplication or addition."], "extent": [21399, 21567]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Additive"], "extent": [21567, 21581], "body": [{"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Outlier Range"]}, " will be added to the maximum and/or minimum of the original range."], "extent": [21581, 21675]}, {"type": "para", "indent": 8, "text": ["Elements are distributed in ", {"type": "code", "text": ["-2"]}, " to ", {"type": "code", "text": ["2"]}, " range with ", {"type": "ui", "text": ["Outlier Range"]}, " set to ", {"type": "code", "text": ["3"]}, ":"], "extent": [21675, 21773]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/sop/aaf_outlier_additive.jpg", "type": "img", "text": ""}, " "], "extent": [21773, 21829]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Multiplicative"], "extent": [21829, 21849], "body": [{"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Outlier Range"]}, " will multiply the maximum and/or minimum of the original range."], "extent": [21849, 21940]}, {"type": "para", "indent": 8, "text": ["Elements are distributed in ", {"type": "code", "text": ["-2"]}, " to ", {"type": "code", "text": ["2"]}, " range with ", {"type": "ui", "text": ["Outlier Range"]}, " set to ", {"type": "code", "text": ["3"]}, ":"], "extent": [21940, 22030]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/sop/aaf_outlier_additiveabove.jpg", "type": "img", "text": ""}, " "], "extent": [22030, 22098]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Below Min Value"], "extent": [22098, 22119], "body": [{"type": "para", "indent": 8, "text": ["Only extend the minimum limit of the range."], "extent": [22119, 22172]}, {"type": "para", "indent": 8, "text": ["Elements are distributed in ", {"type": "code", "text": ["-2"]}, " to ", {"type": "code", "text": ["2"]}, " range with ", {"type": "ui", "text": ["Outlier Range"]}, " set to ", {"type": "code", "text": ["3"]}, ":"], "extent": [22172, 22262]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/sop/aaf_outlier_additivebelow.jpg", "type": "img", "text": ""}, " "], "extent": [22262, 22322]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Both"], "extent": [22322, 22340], "body": [{"type": "para", "indent": 8, "text": ["Extend both the minimum and maximum limit of the range."], "extent": [22340, 22405]}, {"type": "para", "indent": 8, "text": ["Elements are distributed in ", {"type": "code", "text": ["-2"]}, " to ", {"type": "code", "text": ["2"]}, " range with ", {"type": "ui", "text": ["Outlier Range"]}, " set to ", {"type": "code", "text": ["3"]}, ":"], "extent": [22405, 22495]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/sop/aaf_outlier_additiveboth.jpg", "type": "img", "text": ""}, " "], "extent": [22495, 22562]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "len_outlierrange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [22562, 22568], "body": [{"type": "para", "indent": 4, "text": ["Controls random selection of outliers. Change the value of the ", {"type": "ui", "text": ["Seed"]}, " if outlier selection is undesirable. "], "extent": [22593, 22708]}], "container": true, "attrs": {"id": "len_outlierseed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Outlier Attribute"], "extent": [22708, 22727], "body": [{"type": "para", "indent": 4, "text": ["Integer attribute to store whether an element is outlier (indicated by ", {"type": "code", "text": ["1"]}, ") or not (signaled with ", {"type": "code", "text": ["0"]}, ")."], "extent": [22754, 22868]}], "container": true, "attrs": {"id": "len_outlierattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Step Size"], "extent": [22868, 22879], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, possible adjustment values will be quantized to the ", {"type": "ui", "text": ["Step Size"]}, ". For example, if minimum and maximum of the range are ", {"type": "code", "text": ["0.1"]}, " and ", {"type": "code", "text": ["3"]}, ", and ", {"type": "ui", "text": ["Step Size"]}, " is set to ", {"type": "code", "text": ["1"]}, ", then the possible adjustment values are ", {"type": "code", "text": ["0.1, 1.1, 2.1"]}, "."], "extent": [22907, 23170]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/sop/aaf_stepping.jpg", "type": "img", "text": ""}, " "], "extent": [23170, 23213]}], "container": true, "attrs": {"id": "len_enablestepping"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Adjustment Attribute"], "extent": [23213, 23235], "body": [{"type": "para", "indent": 4, "text": ["Specifies the attribute storing the adjustment value to use. This parameter is only available when ", {"type": "ui", "text": ["Adjustment for"]}, " is set to ", {"type": "ui", "text": ["Length Only"]}, " and ", {"type": "ui", "text": ["Adjust With"]}, " is ", {"type": "ui", "text": ["Attribute"]}, "."], "extent": [23265, 23452]}], "container": true, "attrs": {"id": "len_adjustmentattrib"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Random "], "extent": [23452, 23467]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Randomization By"], "extent": [23467, 23486], "body": [{"type": "para", "indent": 4, "text": ["Specifies how the pseudo-random number generator is seeded for each element\n    to produce the adjustment value. ", {"type": "ui", "text": ["Element Number"]}, " will use the point,\n    primitive, or vertex number depending on ", {"type": "ui", "text": ["Attribute Class"]}, ". Topology\n    changes on the input geometry can shift element numbers, causing different\n    adjustment values to be used. ", {"type": "ui", "text": ["Custom Attribute"]}, " lets you provide an\n    integer attribute to make sure the random value is not dependent on element order."], "extent": [23506, 23979]}], "container": true, "attrs": {"id": "randmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Custom Attribute"], "extent": [23979, 23997], "body": [{"type": "para", "indent": 4, "text": ["The attribute to use for seeding random number generation."], "extent": [24017, 24085]}], "container": true, "attrs": {"id": "randattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [24085, 24091], "body": [{"type": "para", "indent": 4, "text": ["All generated values depend randomly on this value. Choose a different value\n    if the current seed produces undesirable samples."], "extent": [24115, 24251]}], "container": true, "attrs": {"id": "randomseed    "}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "type": "sep", "indent": 0, "text": [" Noise Pattern "], "extent": [19947, 19967], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Noise type"], "extent": [3092, 3104], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."], "extent": [3119, 3223]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fast"], "extent": [3223, 3233], "body": [{"type": "para", "indent": 8, "text": ["The default. A faster and more interesting variant of Perlin noise."], "extent": [3233, 3310]}, {"type": "para", "indent": 8, "text": ["Frequency is scaled by 1.25."], "extent": [3310, 3352]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_simplex.jpg", "type": "img", "text": ""}], "extent": [3352, 3406]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sparse Convolution"], "extent": [3406, 3430], "body": [{"type": "para", "indent": 8, "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."], "extent": [3430, 3532]}, {"type": "para", "indent": 8, "text": ["Frequency is scaled by 1.25."], "extent": [3532, 3574]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sparse.jpg", "type": "img", "text": ""}], "extent": [3574, 3627]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alligator"], "extent": [3627, 3642], "body": [{"type": "para", "indent": 8, "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."], "extent": [3642, 3729]}, {"type": "para", "indent": 8, "text": ["Frequency is scaled by 1.64."], "extent": [3729, 3771]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_alligator.jpg", "type": "img", "text": ""}], "extent": [3771, 3831]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin"], "extent": [3831, 3843], "body": [{"type": "para", "indent": 8, "text": ["A noise where the visual details are the same size. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Perlin_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [3843, 3944]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_perlin.jpg", "type": "img", "text": ""}, "\n        ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_periodic_perlin.jpg", "type": "img", "text": ""}], "extent": [3944, 4058]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Flow"], "extent": [4058, 4075], "body": [{"type": "para", "indent": 8, "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"type": "ui", "text": ["Flow rotation"]}, " parameter below to control the rotation."], "extent": [4075, 4291]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4291, 4315], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_flow.mp4"}}, {"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4362, 4378], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_periodic_flow.mp4"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex"], "extent": [4438, 4451], "body": [{"type": "para", "indent": 8, "text": ["A noise similar to Perlin but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [4451, 4618]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F1"], "extent": [4618, 4642], "body": [{"type": "para", "indent": 8, "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Worley_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [4642, 4799]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f1.jpg", "type": "img", "text": ""}], "extent": [4799, 4859]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F2-F1"], "extent": [4859, 4886], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley noise that produces blunted and cornered features."], "extent": [4886, 4970]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f2.jpg", "type": "img", "text": ""}], "extent": [4970, 5030]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F1"], "extent": [5030, 5057], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5057, 5185]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F2-F1"], "extent": [5185, 5215], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5215, 5346]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F1"], "extent": [5346, 5373], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5373, 5501]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F2-F1"], "extent": [5501, 5531], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5531, 5658]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "basis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Location Attribute"], "extent": [12418, 12438], "body": [{"type": "para", "indent": 4, "text": ["The node generates values for each element by sampling a noise field at the location specified by this vector attribute on the incoming geometry. If this is ", {"type": "code", "text": ["P"]}, " (point position, the default), the points of the geometry will appear to swim through the noise. If you want the noise to ", {"type": "q", "text": ["stick"]}, " to the points, you can copy the initial point positions into a ", {"type": "code", "text": ["rest"]}, " attribute and use that attribute here instead."], "extent": [12463, 12876]}], "container": true, "attrs": {"id": "locationattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size"], "extent": [12876, 12890], "body": [{"type": "para", "indent": 4, "text": ["Uniform scale of elements in the noise."], "extent": [12912, 12957]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate scales along each axis."], "extent": [12957, 13071]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [13071, 13083], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "elementsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Scale"], "extent": [13132, 13147], "body": [{"type": "para", "indent": 4, "text": ["When you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you scale the ", {"type": "ui", "text": ["Element Size"]}, " separately across each axis."], "extent": [13174, 13333]}], "container": true, "attrs": {"id": "elementscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [13333, 13341], "body": [{"type": "para", "indent": 4, "text": ["Offset within the evaluated noise field (added to each axis). If you have the general noise effect you want, but want to get a different set of values for a different look, try changing the offset."], "extent": [13358, 13561]}, {"type": "para", "indent": 4, "text": ["You can animate the noise using an expression such as ", {"type": "code", "text": ["$T * 0.25"]}, " here. This is faster to compute than ", {"type": "ui", "text": ["Animate Noise"]}, ", but gives the visual effect of ", {"type": "q", "text": ["panning"]}, " across the noise field, which may or may not be acceptable."], "extent": [13561, 13789]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button for separate additional offsets along each axis."], "extent": [13789, 13919]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [13919, 13931], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "offset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [13979, 13987], "body": [{"type": "para", "indent": 4, "text": ["When you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms.html"}, " Per Component button, this lets you add the a separate offset along each axis."], "extent": [14009, 14155]}], "container": true, "attrs": {"id": "offsetv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use VEXpression"], "extent": [14155, 14172], "body": [{"type": "para", "indent": 4, "text": ["Turn this checkbox on to use a VEXpression to override parameters based on arbitrary attribute values."], "extent": [14201, 14309]}], "container": true, "attrs": {"id": "usenoiseexpression"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Animation "], "extent": [15051, 15069], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Animate Noise"], "extent": [15098, 15117], "body": [{"type": "para", "indent": 8, "text": ["Vary the generated noise with time. Some noise types do not support this feature."], "extent": [15140, 15235]}, {"type": "para", "indent": 8, "text": ["Applying animation this way on geometries with millions of element count is slower to compute than using expressions such as ", {"type": "code", "text": ["$T * 0.25"]}, " in the ", {"type": "ui", "text": ["Offset"]}, " parameter to ", {"type": "q", "text": ["pan"]}, " across the noise field. "], "extent": [15235, 15451]}], "container": true, "attrs": {"id": "animated"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pulse Duration"], "extent": [15451, 15471], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Animated Noise"]}, " is on, this controls the rate of change of the noise pattern."], "extent": [15499, 15595]}], "container": true, "attrs": {"id": "pulseduration"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkanimation"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Fractal "], "extent": [15595, 15611], "body": [{"type": "para", "indent": 4, "text": ["The fractal controls let you add additional fractal noise on top of the output of the basic noise type."], "extent": [15641, 15754]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fractal Type"], "extent": [6967, 6981], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [7003, 7013], "body": [{"type": "para", "indent": 8, "text": ["Does not add any additional noise on top of the basic noise."], "extent": [7013, 7091]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_none.jpg", "type": "img", "text": ""}], "extent": [7091, 7154]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Standard"], "extent": [7154, 7168], "body": [{"type": "para", "indent": 8, "text": ["Adds pseudo-random noise on top of the basic output."], "extent": [7168, 7238]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_standard.jpg", "type": "img", "text": ""}], "extent": [7238, 7305]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Terrain"], "extent": [7305, 7318], "body": [{"type": "para", "indent": 8, "text": ["Adds noise like ", {"type": "q", "text": ["Standard"]}, " but dampens the noise in the valleys, which can be useful for generating mountainous terrain."], "extent": [7318, 7456]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_terrain.jpg", "type": "img", "text": ""}], "extent": [7456, 7522]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hybrid"], "extent": [7522, 7534], "body": [{"type": "para", "indent": 8, "text": ["Like terrain, but with more sharpness in the valleys."], "extent": [7534, 7597]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fractal"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 4, "text": ["The following parameters are available when Fractal type is anything except ", {"type": "ui", "text": ["None"]}, ".        "], "extent": [15805, 15912]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Max octaves"], "extent": [7674, 7687], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more ", {"type": "q", "text": ["detailed"]}, " the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."], "extent": [7705, 8081]}], "container": true, "attrs": {"id": "oct"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [8081, 8093], "body": [{"type": "para", "indent": 4, "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."], "extent": [8111, 8247]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8247, 8263], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lacunarity.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "lac"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [8312, 8323], "body": [{"type": "para", "indent": 4, "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the ", {"type": "q", "text": ["jaggies"]}, " added to the output. You can use a negative value for roughness."], "extent": [8343, 8546]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8546, 8562], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_roughness.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "rough"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkfractal"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Warping "], "extent": [16052, 16068], "body": [{"type": "para", "indent": 4, "text": [{"type": "ui", "text": ["Lattice Warp"]}, " and ", {"type": "ui", "text": ["Gradient Warp"]}, " are two methods for adding ", {"type": "q", "text": ["fractal-ness"]}, " to the basic noises by warping the noise space."], "extent": [16090, 16228]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Lattice Warp"], "extent": [16228, 16246], "body": [{"type": "para", "indent": 8, "text": ["Adds ", {"type": "q", "text": ["stringiness"]}, " or ", {"type": "q", "text": ["wiriness"]}, " to standard noise."], "extent": [16269, 16334]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [16334, 16350], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lattice_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "disp"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Lattice Warp Size"], "extent": [16409, 16432], "body": [{"type": "para", "indent": 8, "text": ["Controls base feature size of the generated noise. The value applies to each axis."], "extent": [16460, 16560]}], "container": true, "attrs": {"id": "dispesize"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gradient Warp"], "extent": [16560, 16579], "body": [{"type": "para", "indent": 8, "text": ["Widens the peaks or valleys of the noise output."], "extent": [16603, 16665]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [16665, 16681], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_gradient_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "gflow"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Accumulate Lattice Warp"], "extent": [16741, 16770], "body": [{"type": "para", "indent": 8, "text": ["Accumulates the warp for each iteration (octave) of added fractal noise. This can add interesting smudgy effects when used in images, and interesting landmarks when used for terrain."], "extent": [16795, 16991]}], "container": true, "attrs": {"id": "accuml"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Accumulate Gradient Warp"], "extent": [16991, 17021], "body": [{"type": "para", "indent": 8, "text": ["Accumulates the warp for each iteration (octave) of added fractal noise."], "extent": [17046, 17132]}], "container": true, "attrs": {"id": "accumg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow Rotation"], "extent": [9621, 9636], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Noise type"]}, " is ", {"type": "q", "text": ["Flow"]}, ", this controls the rotation of the ", {"type": "q", "text": ["swirl"]}, ", from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Because this parameter is fractional, you can\u2019t just use ", {"type": "code", "text": ["$F"]}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"type": "code", "text": ["$FF / 100"]}, "."], "extent": [9658, 9955]}], "container": true, "attrs": {"id": "flowrot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Distortion"], "extent": [4529, 4542], "body": [{"type": "para", "indent": 4, "text": ["Controls how much the noise is distorted in the direction of decreasing noise values if ", {"type": "ui", "text": ["Distortion"]}, " is greater than ", {"type": "code", "text": ["1"]}, ", and in the direction of increasing noise values if ", {"type": "ui", "text": ["Distortion"]}, " is less than ", {"type": "code", "text": ["1"]}, ". When worley details are added to the noise pattern, the effect of distortion are largely diminished."], "extent": [4559, 4874]}, {"type": "para", "indent": 4, "text": ["Distortion with a value of ", {"type": "code", "text": ["1"]}, ":"], "extent": [4874, 4911]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_perlin_posd.png", "type": "img", "text": ""}], "extent": [4911, 4970]}, {"type": "para", "indent": 4, "text": ["Distortion with a value of ", {"type": "code", "text": ["-1"]}, ":"], "extent": [4970, 5008]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/cloudnoise_perlin_negd.png", "type": "img", "text": ""}], "extent": [5008, 5066]}], "container": true, "attrs": {"id": "distort"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch"], "extent": [5066, 5075], "body": [{"type": "para", "indent": 4, "text": ["How much to stretch the noise in each direction. The advantage of using this instead of ", {"type": "ui", "text": ["Element Size"]}, " is that it preserves some details unstretched, making the stretched noise pattern more natural looking."], "extent": [5092, 5307]}, {"type": "para", "indent": 4, "text": ["Comparing Element Scale of ", {"type": "code", "text": ["3"]}, " (left) to Stretch value of ", {"type": "code", "text": ["3"]}, " (right) along the X-axis:"], "extent": [5307, 5399]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 4, "role": "item", "extent": [5399, 5420], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_perlin_stretch.png", "image2": "/images/nodes/vop/cloudnoise_perlin_elementscale.png"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "stretch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Droop"], "extent": [5556, 5563], "body": [{"type": "para", "indent": 4, "text": ["Warps the generated noise such that the noise pattern is bending or hanging towards the given droop direction."], "extent": [5578, 5694]}, {"type": "para", "indent": 4, "text": ["Noise pattern without (left) and with droop applied (right):"], "extent": [5694, 5759]}, {"type": "compare_images_group", "body": [{"ext": null, "type": "compare_images", "indent": 4, "role": "item", "extent": [5759, 5780], "body": [], "container": true, "attrs": {"image1": "/images/nodes/vop/cloudnoise_perlin_droop7.png", "image2": "/images/nodes/vop/cloudnoise_perlin_nodroop.png"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "droop"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Droop Direction"], "extent": [5910, 5927], "body": [{"type": "para", "indent": 4, "text": ["The direction in which the noise is warped."], "extent": [5945, 5994]}], "container": true, "attrs": {"id": "droopdir"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkwarping"}}], "container": true, "attrs": {"id": "linknoise"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Post-Process "], "extent": [24290, 24311]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Post-Process"], "extent": [24311, 24333], "body": [{"type": "para", "indent": 4, "text": ["Enables a set of controls to further fine tune the output attribute value. Unless set otherwise, all post-process modifications will take place after adjustment is applied to the attribute."], "extent": [24361, 24560]}], "container": true, "attrs": {"id": "enable_postprocess"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend"], "extent": [1338, 1345], "body": [{"type": "para", "indent": 4, "text": ["Blends between the incoming attribute and the output attribute value. A blend of ", {"type": "code", "text": ["0"]}, " means that no adjustment takes place: the incoming attribute value is the output value. Likewise, a value of ", {"type": "code", "text": ["1"]}, " will output the adjusted value, ignoring the initial value. Blending can be done either by uniform value (", {"type": "ui", "text": ["Constant"]}, ") or by value of the ", {"type": "ui", "text": ["Blend Attribute"]}, " (when the menu on the right of this parameter is set to ", {"type": "ui", "text": ["Use Attribute"]}, ")."], "extent": [1366, 1804]}], "container": true, "attrs": {"id": "blendweight"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend Attribute"], "extent": [1804, 1821], "body": [{"type": "para", "indent": 4, "text": ["A float attribute between the range ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " to use as blend value. This attribute must be present on the appropriate elements (as set by ", {"type": "ui", "text": ["Attribute Class"]}, "). A blend value of ", {"type": "code", "text": ["0"]}, " means that no adjustment takes place: the incoming attribute value is the output value. Likewise, a value of ", {"type": "code", "text": ["1"]}, " will output the adjusted value, ignoring the initial value."], "extent": [1842, 2203]}], "container": true, "attrs": {"id": "blendattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Length Scale"], "extent": [24631, 24645], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, the output vector\u2019s length will be scaled by\n    this amount."], "extent": [24664, 24770]}], "container": true, "attrs": {"id": "postscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum Length"], "extent": [24770, 24786], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, the output attribute\u2019s lengths are clamped\n    against the specified ", {"type": "ui", "text": ["Minimum Length"]}, "."], "extent": [24809, 24934]}], "container": true, "attrs": {"id": "clampminvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Maximum Length"], "extent": [24934, 24950], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, the output attribute\u2019s lengths are clamped\n    against the specified ", {"type": "ui", "text": ["Maximum Length"]}, "."], "extent": [24973, 25102]}], "container": true, "attrs": {"id": "clampmaxvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Vectors Unit Length"], "extent": [25102, 25128], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, the final attribute values will be rescaled to have length 1."], "extent": [25151, 25249]}], "container": true, "attrs": {"id": "postnormalize"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Output Attributes "], "extent": [25249, 25275]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Length"], "extent": [25275, 25285], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, an attribute of the given name will be created on the same\n    elements to store the length of the final vector."], "extent": [25307, 25456]}], "container": true, "attrs": {"id": "lengthattrib"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Attribute Properties "], "extent": [25456, 25485]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Default Value"], "extent": [25485, 25502], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, it overwrites the default value property for\n    the target attribute. Merging the output of this node with another geometry\n    that is missing the attribute guarantees that new values will be initialized\n    to this ", {"type": "ui", "text": ["Default Value"]}, "."], "extent": [25519, 25796]}], "container": true, "attrs": {"id": "default"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type Qualifier"], "extent": [25796, 25812], "body": [{"type": "para", "indent": 4, "text": ["If this checkbox is turned on, the qualifier property for the target attribute is set to the selected type. The qualifier controls how the values are modified when its geometry is transformed. "], "extent": [25830, 26036]}], "container": true, "attrs": {"id": "typeinfo"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [26036, 26045], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustfloat", "type": "link", "text": ["Attribute Adjust Float"], "fullpath": "/nodes/sop/attribadjustfloat.html"}], "extent": [26045, 26100]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustinteger", "type": "link", "text": ["Attribute Adjust Integer"], "fullpath": "/nodes/sop/attribadjustinteger.html"}], "extent": [26100, 26158]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribnoise", "type": "link", "text": ["Attribute Noise"], "fullpath": "/nodes/sop/attribnoise.html"}], "extent": [26158, 26200]}], "container": true}], "text": "Related"}], "title": ["Attribute Adjust Vector"], "summary": ["Modifies values for a vector-type attribute on the incoming geometry."], "included": ["/nodes/sop/attribadjustfloat", "/nodes/sop/attribnoise", "/nodes/vop/cloudnoise", "/nodes/vop/unifiednoise"]}