{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "karmastandardrendervars", "icon": "LOP/karmastandardrendervars", "since": "18.0", "tags": "rendering,karma", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Karma Standard Render Vars"], "extent": [134, 165]}, {"type": "summary", "indent": 0, "text": ["Create standard karma render vars (AOVs/Image Planes)."], "extent": [165, 228]}, {"type": "para", "indent": 0, "text": ["The Karma Standard Render Vars LOP creates standard karma render vars primitives and populates them with predefined expressions for the various image planes. \nTo add additional render vars, for example using custom light path expressions, you can use the ", {"scheme": "Node", "value": "/nodes/lop/additionalrendervars", "type": "link", "text": ["Additional Render Vars LOP"], "fullpath": "/nodes/lop/additionalrendervars.html"}, "."], "extent": [228, 546]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [546, 558], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["LPE Tag AOV Limit"], "extent": [558, 578], "body": [{"type": "para", "indent": 4, "text": ["When splitting AOVs per lights' LPE Tag, specify the maximum number of LPE Tag AOVs beyond which the node will emit a warning."], "extent": [600, 732]}], "container": true, "attrs": {"id": "lpeaovlimit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Omit LPE Tags"], "extent": [732, 747], "body": [{"type": "para", "indent": 4, "text": ["When splitting AOVs per lights' LPE Tag, specify a space separated list of lights' LPE Tags which will not create new AOVs."], "extent": [766, 895]}], "container": true, "attrs": {"id": "omitlpes"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["The following parameters are available next to each common render var:"], "extent": [895, 967]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Filter field"], "extent": [967, 981], "body": [{"type": "para", "indent": 4, "text": ["You can use ", {"scheme": null, "value": "/solaris/filters", "type": "link", "text": ["Solaris filter syntax"], "fullpath": "/solaris/filters.html"}, " in this parameter to filter the sample values. The default ", {"type": "code", "text": ["[\"ubox\", {}]"]}, " simply averages all the sample values within each pixel."], "extent": [981, 1170]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["\nSplit per LPE Tag"], "extent": [1170, 1343], "body": [{"type": "para", "indent": 4, "text": ["Creates additional AOVs for each unique light LPE Tag. To manage LPE Tags for lights, see the ", {"scheme": "Node", "value": "/nodes/lop/lpetag", "type": "link", "text": ["LPE Tag LOP node"], "fullpath": "/nodes/lop/lpetag.html"}, "."], "extent": [1343, 1479]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Component Level Outputs"], "extent": [1479, 1509], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Beauty"], "extent": [1509, 1518], "body": [{"type": "para", "indent": 4, "text": ["Add the beauty output as a ", {"type": "code", "text": ["color4f"]}, " render var named ", {"type": "code", "text": ["C"]}, "."], "extent": [1535, 1599]}], "container": true, "attrs": {"id": "beauty"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Beauty Unshadowed"], "extent": [1599, 1618], "body": [{"type": "para", "indent": 4, "text": ["Add the unoccluded (unshadowed) beauty output as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["beautyunshadowed"]}, ", using the LPE ", {"type": "code", "text": ["unoccluded;C.*[LO][LO]"]}, "."], "extent": [1645, 1788]}], "container": true, "attrs": {"id": "beautyunshadowed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Diffuse"], "extent": [1788, 1806], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combineddiffuse"]}, ", using the LPE ", {"type": "code", "text": ["C<RD>.*L"]}, "."], "extent": [1832, 1992]}], "container": true, "attrs": {"id": "combineddiffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Diffuse"], "extent": [1992, 2008], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directdiffuse"]}, ", using the LPE ", {"type": "code", "text": ["C<RD>L"]}, "."], "extent": [2032, 2175]}], "container": true, "attrs": {"id": "directdiffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Diffuse"], "extent": [2175, 2193], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectdiffuse"]}, ", using the LPE ", {"type": "code", "text": ["C<RD>.+L"]}, "."], "extent": [2219, 2377]}], "container": true, "attrs": {"id": "indirectdiffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Diffuse Unshadowed"], "extent": [2377, 2406], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) unoccluded diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combineddiffuseunshadowed"]}, ", using the LPE ", {"type": "code", "text": ["unoccluded;C<RD>.*[LO]"]}, "."], "extent": [2442, 2637]}], "container": true, "attrs": {"id": "combineddiffuseunshadowed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Diffuse Unshadowed"], "extent": [2637, 2664], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) unoccluded diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directdiffuseunshadowed"]}, ", using the LPE ", {"type": "code", "text": ["unoccluded;C<RD>L"]}, "."], "extent": [2698, 2873]}], "container": true, "attrs": {"id": "directdiffuseunshadowed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Diffuse Unshadowed"], "extent": [2873, 2902], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) unoccluded diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectdiffuseunshadowed"]}, ", using the LPE ", {"type": "code", "text": ["unoccluded;C<RD>.+L"]}, "."], "extent": [2938, 3128]}], "container": true, "attrs": {"id": "indirectdiffuseunshadowed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Glossy Reflection"], "extent": [3128, 3156], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) glossy surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combinedglossyreflection"]}, ", using the LPE ", {"type": "code", "text": ["C<RG>.*[LO]"]}, "."], "extent": [3195, 3366]}], "container": true, "attrs": {"id": "combinedglossyreflection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Glossy Reflection"], "extent": [3366, 3392], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) glossy surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directglossyreflection"]}, ", using the LPE ", {"type": "code", "text": ["C<RG>L"]}, "."], "extent": [3425, 3576]}], "container": true, "attrs": {"id": "directglossyreflection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Glossy Reflection"], "extent": [3576, 3604], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) glossy reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectglossyreflection"]}, ", using the LPE ", {"type": "code", "text": ["C<RG>.+L"]}, "."], "extent": [3639, 3797]}], "container": true, "attrs": {"id": "indirectglossyreflection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Glossy Transmission"], "extent": [3797, 3818], "body": [{"type": "para", "indent": 4, "text": ["Add the glossy transmission component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["glossytransmission"]}, ", using the LPE ", {"type": "code", "text": ["C<TG>.*[LO]"]}, "."], "extent": [3847, 3973]}], "container": true, "attrs": {"id": "glossytransmission"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Visible Lights"], "extent": [3973, 3989], "body": [{"type": "para", "indent": 4, "text": ["Add the visible lights component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["visiblelights"]}, ", using the LPE ", {"type": "code", "text": ["CL"]}, "."], "extent": [4013, 4120]}], "container": true, "attrs": {"id": "visiblelights"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Emission"], "extent": [4120, 4139], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) emission component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combinedemission"]}, ", using the LPE ", {"type": "code", "text": ["C.*O"]}, "."], "extent": [4166, 4305]}], "container": true, "attrs": {"id": "combinedemission"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Emission"], "extent": [4305, 4322], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) emission component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directemission"]}, ", using the LPE ", {"type": "code", "text": ["CO"]}, "."], "extent": [4347, 4469]}], "container": true, "attrs": {"id": "directemission"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Emission"], "extent": [4469, 4488], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) emission component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectemission"]}, ", using the LPE ", {"type": "code", "text": ["C.+O"]}, "."], "extent": [4515, 4652]}], "container": true, "attrs": {"id": "indirectemission"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Volume"], "extent": [4652, 4669], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) volume component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combinedvolume"]}, ", using the LPE ", {"type": "code", "text": ["CV.*L"]}, "."], "extent": [4694, 4830]}], "container": true, "attrs": {"id": "combinedvolume"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Volume"], "extent": [4830, 4845], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) volume component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directvolume"]}, ", using the LPE ", {"type": "code", "text": ["CVL"]}, "."], "extent": [4868, 4987]}], "container": true, "attrs": {"id": "directvolume"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Volume"], "extent": [4987, 5004], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) volume component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectvolume"]}, ", using the LPE ", {"type": "code", "text": ["CV.+L"]}, "."], "extent": [5029, 5163]}], "container": true, "attrs": {"id": "indirectvolume"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["BSDF Labelled ", {"type": "code", "text": ["coat"]}], "extent": [5163, 5185], "body": [{"type": "para", "indent": 4, "text": ["Add the coat component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["coat"]}, ", using the LPE ", {"type": "code", "text": ["C<...'coat'>.*[LO]"]}, "."], "extent": [5200, 5304]}], "container": true, "attrs": {"id": "coat"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["BSDF Labelled ", {"type": "code", "text": ["sss"]}], "extent": [5304, 5325], "body": [{"type": "para", "indent": 4, "text": ["Add the sss component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["sss"]}, ", using the LPE ", {"type": "code", "text": ["C<...'sss'>.*[LO]"]}, "."], "extent": [5339, 5441]}], "container": true, "attrs": {"id": "sss"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Ray Level Outputs"], "extent": [5441, 5466], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["P (World Space)"], "extent": [5466, 5484], "body": [{"type": "para", "indent": 4, "text": ["Add the world space position as a ", {"type": "code", "text": ["point3f"]}, " render var named ", {"type": "code", "text": ["P"]}, "."], "extent": [5502, 5573]}], "container": true, "attrs": {"id": "position"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["P (Camera Space)"], "extent": [5573, 5591], "body": [{"type": "para", "indent": 4, "text": ["Add the camera space position as a ", {"type": "code", "text": ["point3f"]}, " render var named ", {"type": "code", "text": ["P"]}, "."], "extent": [5612, 5684]}], "container": true, "attrs": {"id": "hitP_camera"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth (Camera Space)"], "extent": [5684, 5706], "body": [{"type": "para", "indent": 4, "text": ["Add the distance from the camera origin as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["depth"]}, "."], "extent": [5721, 5805]}], "container": true, "attrs": {"id": "depth"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element (Raw ID)"], "extent": [5805, 5823], "body": [{"type": "para", "indent": 4, "text": ["Add the element ID as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["element"]}, "."], "extent": [5840, 5905]}], "container": true, "attrs": {"id": "element"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prim ID"], "extent": [5905, 5914], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive identifier as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["primid"]}, "."], "extent": [5930, 6004]}], "container": true, "attrs": {"id": "primid"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["UV"], "extent": [6004, 6008], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive hit UV as a ", {"type": "code", "text": ["float3"]}, " render var named ", {"type": "code", "text": ["UV"]}, "."], "extent": [6020, 6087]}], "container": true, "attrs": {"id": "uv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["N (Smooth Normal)"], "extent": [6087, 6106], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive hit normal as a ", {"type": "code", "text": ["normal3f"]}, " render var named ", {"type": "code", "text": ["N"]}, "."], "extent": [6120, 6192]}], "container": true, "attrs": {"id": "hitN"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["N (Smooth Camera Normal)"], "extent": [6192, 6218], "body": [{"type": "para", "indent": 4, "text": ["Add the camera space primitive hit normal as a ", {"type": "code", "text": ["normal3f"]}, " render var named ", {"type": "code", "text": ["N_camera"]}, "."], "extent": [6239, 6331]}], "container": true, "attrs": {"id": "hitN_camera"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["N (Smooth Facing Normal)"], "extent": [6331, 6357], "body": [{"type": "para", "indent": 4, "text": ["Add the viewer-facing primitive hit normal as a ", {"type": "code", "text": ["normal3f"]}, " render var named ", {"type": "code", "text": ["N_facing"]}, ". Backfaces also face towards the viewer."], "extent": [6378, 6511]}], "container": true, "attrs": {"id": "hitN_facing"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["N (Facing Ratio)"], "extent": [6511, 6529], "body": [{"type": "para", "indent": 4, "text": ["Add the falloff (dot product) between the viewer and hit normal as a ", {"type": "code", "text": ["half"]}, " render var named ", {"type": "code", "text": ["N_facingratio"]}, "."], "extent": [6555, 6670]}], "container": true, "attrs": {"id": "hitN_facingratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ng (Geometric Normal)"], "extent": [6670, 6693], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive geometric normal as a ", {"type": "code", "text": ["normal3f"]}, " render var named ", {"type": "code", "text": ["Ng"]}, "."], "extent": [6708, 6787]}], "container": true, "attrs": {"id": "hitNg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ng (Geometric Camera Normal)"], "extent": [6787, 6817], "body": [{"type": "para", "indent": 4, "text": ["Add the camera space primitive geometric normal as a ", {"type": "code", "text": ["normal3f"]}, " render var named ", {"type": "code", "text": ["Ng_camera"]}, "."], "extent": [6839, 6938]}], "container": true, "attrs": {"id": "hitNg_camera"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ng (Geometric Facing Normal)"], "extent": [6938, 6968], "body": [{"type": "para", "indent": 4, "text": ["Add the viewer facing primitive geometric normal as a ", {"type": "code", "text": ["normal3f"]}, " render var named ", {"type": "code", "text": ["Ng_facing"]}, ". Backfaces also face towards the viewer."], "extent": [6990, 7130]}], "container": true, "attrs": {"id": "hitNg_facing"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ng (Geometric Facing Ratio)"], "extent": [7130, 7159], "body": [{"type": "para", "indent": 4, "text": ["Add the falloff (dot product) between the viewer and geometric normal as a ", {"type": "code", "text": ["half"]}, " render var named ", {"type": "code", "text": ["Ng_facingratio"]}, "."], "extent": [7186, 7308]}], "container": true, "attrs": {"id": "hitNg_facingratio"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Motion Vectors"], "extent": [7308, 7324], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive motion vector as a ", {"type": "code", "text": ["vector3f"]}, " render var named ", {"type": "code", "text": ["motionvector"]}, "."], "extent": [7347, 7433]}], "container": true, "attrs": {"id": "motionvectors"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity"], "extent": [7433, 7443], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive velocity as a ", {"type": "code", "text": ["vector3f"]}, " render var named ", {"type": "code", "text": ["velocity"]}, "."], "extent": [7461, 7538]}], "container": true, "attrs": {"id": "velocity"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Raw"], "extent": [7538, 7548], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Albedo"], "extent": [7548, 7557], "body": [{"type": "para", "indent": 4, "text": ["Add the albedo output as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["export_basecolor"]}, ". Only available with shaders that export this information, such as the principled shader."], "extent": [7574, 7742]}], "container": true, "attrs": {"id": "albedo"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ambient Occlusion"], "extent": [7742, 7761], "body": [{"type": "para", "indent": 4, "text": ["Add the ambient occlusion output as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["AO"]}, "."], "extent": [7788, 7864]}], "container": true, "attrs": {"id": "ambientocclusion"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [7864, 7873], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/additionalrendervars", "type": "link", "text": "", "fullpath": "/nodes/lop/additionalrendervars.html"}], "extent": [7873, 7908]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/karma", "type": "link", "text": "", "fullpath": "/nodes/lop/karma.html"}], "extent": [7908, 7927]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/karmarenderproperties", "type": "link", "text": "", "fullpath": "/nodes/lop/karmarenderproperties.html"}], "extent": [7927, 7962]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/renderproduct", "type": "link", "text": "", "fullpath": "/nodes/lop/renderproduct.html"}], "extent": [7962, 7989]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/rendersettings", "type": "link", "text": "", "fullpath": "/nodes/lop/rendersettings.html"}], "extent": [7989, 8017]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/rendervar", "type": "link", "text": "", "fullpath": "/nodes/lop/rendervar.html"}], "extent": [8017, 8040]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/render/lpe", "type": "link", "text": ["Light Path Expressions"], "fullpath": "/render/lpe.html"}], "extent": [8040, 8080]}], "container": true}], "text": "Related"}], "title": ["Karma Standard Render Vars"], "summary": ["Create standard karma render vars (AOVs/Image Planes)."]}